<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HelixToolkit.SharpDX.Wpf</name>
    </assembly>
    <members>
        <member name="F:HelixToolkit.SharpDX.Wpf.DeferredRenderer.gBuffer">
            TODO Bonus 5.1:
            Implement the G-Buffer as Texture2DArray
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.DeferredRenderer.ssBuffer">
            TODO 5.2:
            Implement the ScreenSpaceBufferTexture as Texture2DArray
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DeferredRenderer.RenderDeferred(HelixToolkit.SharpDX.Wpf.RenderContext,HelixToolkit.SharpDX.Wpf.IRenderer)">
            <summary>
            The Render function
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DeferredRenderer.RenderLighting(HelixToolkit.SharpDX.Wpf.RenderContext,System.Collections.Generic.IEnumerable{HelixToolkit.SharpDX.Wpf.ILight3D})">
            <summary>
            This is the main lighting render function. 
            It is called per frame. 
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DeferredRenderer.RenderScreenSpaceAO(HelixToolkit.SharpDX.Wpf.RenderContext)">
            <summary>
            Call a screen-space AO pass over the g-buffer
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DeferredRenderer.RenderMerge(HelixToolkit.SharpDX.Wpf.RenderContext)">
            <summary>
            
            </summary>        
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DeferredRenderer.RenderBlurH(HelixToolkit.SharpDX.Wpf.RenderContext)">
            <summary>
            
            </summary>        
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DeferredRenderer.RenderBlurV(HelixToolkit.SharpDX.Wpf.RenderContext)">
            <summary>
            
            </summary>        
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DeferredRenderer.RenderBlur4x4(HelixToolkit.SharpDX.Wpf.RenderContext)">
            <summary>
            
            </summary>        
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DeferredRenderer.RenderGBufferOutput(SharpDX.Direct3D11.Texture2D@,System.Boolean)">
            <summary>
            This render-function is use to directly display the 4 G-Buffer textures in one screen. 
            It does not compute any lighting, it just copies the (resized) buffer-textures into the back-buffer. 
            It is called per frame. 
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DeferredRenderer.SetGBufferTargets">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DeferredRenderer.SetGBufferTargets(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DeferredRenderer.SetSSBufferTarget(System.Int32)">
            <summary>
            Set screen-space buffer as render target
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DeferredRenderer.InitBuffers(HelixToolkit.SharpDX.IRenderHost,SharpDX.DXGI.Format)">
            <summary>
            
            </summary>
            <param name="host"></param>
            <param name="format"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DeferredRenderer.InitSSBuffer(SharpDX.DXGI.Format)">
            <summary>
            Init the Color-Buffer as resource
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DeferredRenderer.InitGBuffer(SharpDX.DXGI.Format)">
            <summary>
            Create the G-Buffer
            call it once on init
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DeferredRenderer.InitQuadBuffer">
            <summary>
            Create the geometry and the VBO (vertex and index buffers) 
            for light-geoemtry 
            Call it once in the scene initialization 
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DeferredRenderer.InitSphereBuffer">
            <summary>
            Create the geometry and the VBO (vertex and index buffers) 
            for light-geoemtry 
            Call it once in the scene initialization 
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DeferredRenderer.InitConeBuffer">
            <summary>
            Create the geometry and the VBO (vertex and index buffers) 
            for light-geoemtry 
            Call it once in the scene initialization 
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DeferredRenderer.BindQuadBuffer">
            <summary>
            Bind the quad-buffer (context switch!)
            call it in the render function
            minimize the number of calls
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DeferredRenderer.BindSphereBuffer">
            <summary>
            Bind the sphere-buffer (context switch!)
            call it in the render function
            minimize the number of calls
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DeferredRenderer.BindConeBuffer">
            <summary>
            Bind the cone-buffer (context switch!)
            call it in the render function
            minimize the number of calls
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DeferredRenderer.ClearGBuffer">
            <summary>
            Totaly clear the g-buffer
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DeferredRenderer.ClearSSBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DeferredRenderer.Dispose">
            <summary>
            CG is not working on DX11 objects, 
            so we have to cleanup here by ourseves
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.DeferredRenderer.LightGeometryData">
            <summary>
            helper-struct that wrapps the VBO 
            for particular scene objects, 
            like quad, sphere, or cone for deferred lights
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.DeferredRenderer.DeferredLightingVariables">
            <summary>
            Helper-class which wrapps all parameters needed for deferred lighting
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.DeferredRenderer.ScreenSpaceProcessingVariables">
            <summary>
            Helper-class that wrapps shader variables needed for screen-space processing
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Disposer.RemoveAndDispose``1(``0@)">
            <summary>
            Dispose an object instance and set the reference to null
            </summary>
            <typeparam name="T">The type of object to dispose</typeparam>
            <param name="resource">A reference to the instance for disposal</param>
            <remarks>This method hides any thrown exceptions that might occur during disposal of the object (by design)</remarks>
        </member>
        <member name="P:HelixToolkit.SharpDX.IRenderHost.RenderTechnique">
            <summary>
            This technique is used for the entire render pass 
            by all Element3D if not specified otherwise in
            the elements itself
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DPFCanvas.GetBestAdapter">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DPFCanvas.#cctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DPFCanvas.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DPFCanvas.WindowLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DPFCanvas.WindowClosing(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DPFCanvas.StartD3D">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DPFCanvas.EndD3D">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DPFCanvas.CreateAndBindTargets">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DPFCanvas.SetDefaultRenderTargets">
            <summary>
            Sets the default render-targets
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DPFCanvas.SetDefaultRenderTargets(System.Int32,System.Int32)">
            <summary>
            Sets the default render-targets
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DPFCanvas.ClearRenderTarget(System.Boolean,System.Boolean)">
            <summary>
            Clears the buffers with the clear-color
            </summary>
            <param name="clearBackBuffer"></param>
            <param name="clearDepthStencilBuffer"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DPFCanvas.Render(System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="sceneTime"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DPFCanvas.StartRendering">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DPFCanvas.StopRendering">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DPFCanvas.OnRendering(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DPFCanvas.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
            <summary>
            
            </summary>
            <param name="sizeInfo"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.DPFCanvas.OnIsFrontBufferAvailableChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.DPFCanvas.ClearColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.DPFCanvas.IsShadowMapEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.DPFCanvas.IsMSAAEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.DPFCanvas.RenderTechnique">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.DPFCanvas.Renderable">
            <summary>
            The instance of currently attached IRenderable - this is in general the Viewport3DX
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.DPFCanvas.HelixToolkit#SharpDX#IRenderHost#Device">
            <summary>
            The currently used Direct3D Device
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.DPFCanvas.HelixToolkit#SharpDX#IRenderHost#Effects">
            <summary>
            The currently used Effects class, that is basically an effect manager
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.DPFCanvas.IsInDesignMode">
            <summary>
            Gets a value indicating whether the control is in design mode
            (running in Blend or Visual Studio).
            </summary>
        </member>
        <member name="T:Wpf3DTools.Trackball">
            <summary>
                Trackball is a utility class which observes the mouse events
                on a specified FrameworkElement and produces a Transform3D
                with the resultant rotation and scale.
            
                Example Usage:
            
                    Trackball trackball = new Trackball();
                    trackball.EventSource = myElement;
                    myViewport3D.Camera.Transform = trackball.Transform;
            
                Because Viewport3Ds only raise events when the mouse is over the
                rendered 3D geometry (as opposed to not when the mouse is within
                the layout bounds) you usually want to use another element as 
                your EventSource.  For example, a transparent border placed on
                top of your Viewport3D works well:
                
                    <Grid>
                      <ColumnDefinition />
                      <RowDefinition />
                      <Viewport3D Name="myViewport" ClipToBounds="True" Grid.Row="0" Grid.Column="0" />
                      <Border Name="myElement" Background="Transparent" Grid.Row="0" Grid.Column="0" />
                    </Grid>
                
                NOTE: The Transform property may be shared by multiple Cameras
                      if you want to have auxiliary views following the trackball.
            
                      It can also be useful to share the Transform property with
                      models in the scene that you want to move with the camera.
                      (For example, the Trackport3D's headlight is implemented
                      this way.)
            
                      You may also use a Transform3DGroup to combine the
                      Transform property with additional Transforms.
            </summary>
        </member>
        <member name="M:Wpf3DTools.Trackball.OnMouseDown(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Wpf3DTools.Trackball.OnMouseUp(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Wpf3DTools.Trackball.OnMouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Wpf3DTools.Trackball.Look(System.Windows.Point)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Wpf3DTools.Trackball.Pan(System.Windows.Point)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Wpf3DTools.Trackball.ProjectToTrackball(System.Double,System.Double,System.Windows.Point)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Wpf3DTools.Trackball.Zoom(System.Windows.Point)">
            <summary>
            
            </summary>
        </member>
        <member name="P:Wpf3DTools.Trackball.Transform">
            <summary>
                A transform to move the camera or scene to the trackball's
                current orientation and scale.
            </summary>
        </member>
        <member name="P:Wpf3DTools.Trackball.RotateTransform">
            <summary>
            Rotation component of the transform
            </summary>
        </member>
        <member name="P:Wpf3DTools.Trackball.EventSource">
            <summary>
                The FrameworkElement we listen to for mouse events.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.Viewport3DX">
            <summary>
            Provides a Viewport control.
            </summary>
            <summary>
            Provides the dependency properties for Viewport3DX.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.PartAdornerLayer">
            <summary>
            The adorner layer part name.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.PartCoordinateView">
            <summary>
            The coordinate view part name.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.PartViewCube">
            <summary>
            The view cube part name.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.PartViewCubeViewport">
            <summary>
            The view cube viewport part name.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.IsMoveEnabledProperty">
            <summary>
              The is move enabled property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.StopWatch">
            <summary>
            The stop watch
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.cameraHistory">
            <summary>
              The camera history stack.
            </summary>
            <remarks>
              Implemented as a list since we want to remove items at the bottom of the stack.
            </remarks>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.changeFieldOfViewHandler">
            <summary>
            The change field of view handler
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.fpsWatch">
            <summary>
            The frame rate stopwatch.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.orthographicCamera">
            <summary>
            The orthographic camera.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.panHandler">
            <summary>
            The pan handler
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.perspectiveCamera">
            <summary>
            The perspective camera.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.renderingEventListener">
            <summary>
            The rendering event listener.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.rotateHandler">
            <summary>
            The rotate handler
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.zoomHandler">
            <summary>
            The zoom handler
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.zoomRectangleHandler">
            <summary>
            The zoom rectangle handler
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.adornerLayer">
            <summary>
            The adorner layer.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.coordinateSystemLights">
            <summary>
            The coordinate system lights.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.coordinateView">
            <summary>
            The coordinate view.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.frameCounter">
            <summary>
            The frame counter.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.hasBeenLoadedBefore">
            <summary>
            The "control has been loaded before" flag.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.infoFrameCounter">
            <summary>
            The frame counter for info field updates.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.isSpinning">
            <summary>
              The is spinning flag.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.isSubscribedToRenderingEvent">
            <summary>
            The is subscribed to rendering event.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.lastTick">
            <summary>
              The last tick.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.moveSpeed">
            <summary>
              The move speed.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.panSpeed">
            <summary>
              The pan speed.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.rectangleAdorner">
            <summary>
              The rectangle adorner.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.rotationPoint3D">
            <summary>
              The 3D rotation point.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.rotationPosition">
            <summary>
              The rotation position.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.rotationSpeed">
            <summary>
              The rotation speed.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.spinningPoint3D">
            <summary>
              The 3D point to spin around.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.spinningPosition">
            <summary>
              The spinning position.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.spinningSpeed">
            <summary>
              The spinning speed.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.targetAdorner">
            <summary>
              The target adorner.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.viewCube">
            <summary>
            The view cube.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.viewCubeLights">
            <summary>
            The view cube lights.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.viewCubeViewport">
            <summary>
            The view cube view.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.zoomPoint3D">
            <summary>
              The point to zoom around.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.zoomSpeed">
            <summary>
              The zoom speed.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.#cctor">
            <summary>
            Initializes static members of the <see cref="T:HelixToolkit.SharpDX.Wpf.Viewport3DX"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Wpf.Viewport3DX"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.AddMoveForce(System.Double,System.Double,System.Double)">
            <summary>
            Adds the specified move force.
            </summary>
            <param name="dx">
            The delta x. 
            </param>
            <param name="dy">
            The delta y. 
            </param>
            <param name="dz">
            The delta z. 
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.AddMoveForce(System.Windows.Media.Media3D.Vector3D)">
            <summary>
            Adds the specified move force.
            </summary>
            <param name="delta">
            The delta. 
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.AddPanForce(System.Double,System.Double)">
            <summary>
            Adds the specified pan force.
            </summary>
            <param name="dx">
            The delta x. 
            </param>
            <param name="dy">
            The delta y. 
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.AddPanForce(System.Windows.Media.Media3D.Vector3D)">
            <summary>
            The add pan force.
            </summary>
            <param name="pan">
            The pan. 
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.AddRotateForce(System.Double,System.Double)">
            <summary>
            The add rotate force.
            </summary>
            <param name="dx">
            The delta x. 
            </param>
            <param name="dy">
            The delta y. 
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.AddZoomForce(System.Double)">
            <summary>
            Adds the zoom force.
            </summary>
            <param name="dx">
            The delta. 
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.AddZoomForce(System.Double,System.Windows.Media.Media3D.Point3D)">
            <summary>
            Adds the zoom force.
            </summary>
            <param name="dx">
            The delta. 
            </param>
            <param name="zoomOrigin">
            The zoom origin. 
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.ChangeDirection(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D,System.Double)">
            <summary>
            Changes the direction of the camera.
            </summary>
            <param name="lookDir">
            The look direction. 
            </param>
            <param name="upDir">
            The up direction. 
            </param>
            <param name="animationTime">
            The animation time. 
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.FindNearestPoint(System.Windows.Point)">
            <summary>
            Finds the nearest 3D point in the scene.
            </summary>
            <param name="pt">
            The screen point (2D).
            </param>
            <returns>
            A Point3D or null.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.HideTargetAdorner">
            <summary>
            Hides the target adorner.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.HideZoomRectangle">
            <summary>
            Hides the zoom rectangle.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.LookAt(System.Windows.Media.Media3D.Point3D)">
            <summary>
            Change the camera to look at the specified point.
            </summary>
            <param name="p">
            The point.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.LookAt(System.Windows.Media.Media3D.Point3D,System.Double)">
            <summary>
            Change the camera to look at the specified point.
            </summary>
            <param name="p">
            The point.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.LookAt(System.Windows.Media.Media3D.Point3D,System.Double,System.Double)">
            <summary>
            Change the camera to look at the specified point.
            </summary>
            <param name="p">
            The point.
            </param>
            <param name="distance">
            The distance.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.LookAt(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Vector3D,System.Double)">
            <summary>
            Change the camera to look at the specified point.
            </summary>
            <param name="p">
            The point.
            </param>
            <param name="direction">
            The direction.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/>.
            </summary>
            <exception cref="T:HelixToolkit.SharpDX.Wpf.HelixToolkitException">{0} is missing from the template.</exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.PushCameraSetting">
            <summary>
            Pushes the camera setting.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.ReAttach">
            <summary>
            Detaches the current scene and attaches it again. 
            Call it if you want to repeat the entire Attach-Pass
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.Detach">
            <summary>
            Detaches the current scene.         
            Call it if you want to detouch the scene from the renderer.
            Call <see cref="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.ReAttach"/> in order to attach the current scene again.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.Reset">
            <summary>
            Resets the view.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.SetView(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D,System.Double)">
            <summary>
            Change the camera position and directions.
            </summary>
            <param name="newPosition">
            The new camera position.
            </param>
            <param name="newDirection">
            The new camera look direction.
            </param>
            <param name="newUpDirection">
            The new camera up direction.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.ShowTargetAdorner(System.Windows.Point)">
            <summary>
            Shows the target adorner.
            </summary>
            <param name="position">The position.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.ShowZoomRectangle(System.Windows.Rect)">
            <summary>
            Shows the zoom rectangle.
            </summary>
            <param name="rect">The zoom rectangle.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.StartSpin(System.Windows.Vector,System.Windows.Point,System.Windows.Media.Media3D.Point3D)">
            <summary>
            Starts spinning.
            </summary>
            <param name="speed">The speed.</param>
            <param name="position">The position.</param>
            <param name="aroundPoint">The point to spin around.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.StopSpin">
            <summary>
              Stops the spinning.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.ZoomExtents(System.Windows.Media.Media3D.Rect3D,System.Double)">
            <summary>
            Zooms to the extents of the specified bounding box.
            </summary>
            <param name="bounds">
            The bounding box.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.ZoomExtents(System.Double)">
            <summary>
            Zooms to the extents of the model.
            </summary>
            <param name="animationTime">
            The animation time (milliseconds). 
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.HelixToolkit#SharpDX#Wpf#IRenderer#Attach(HelixToolkit.SharpDX.IRenderHost)">
            <summary>
            Attaches the elements to the specified host.
            </summary>
            <param name="host">The host.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.HelixToolkit#SharpDX#Wpf#IRenderer#Detach">
            <summary>
            Detaches the elements.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.HelixToolkit#SharpDX#Wpf#IRenderer#Render(HelixToolkit.SharpDX.Wpf.RenderContext)">
            <summary>
            Renders the scene.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.HelixToolkit#SharpDX#Wpf#IRenderer#Update(System.TimeSpan)">
            <summary>
            Updates the scene.
            </summary>
            <param name="timeSpan">The time span.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.OnCameraChanged">
            <summary>
            Called when the camera is changed.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when an unhandled MouseUp attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when an unhandled MouseDown attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data. This event data reports details about the mouse button that was pressed and the handled state.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when an unhandled MouseMove attached event reaches an element in its route that is derived from this class.
            </summary>
            <param name="e">
            The <see cref="T:System.Windows.Input.MouseEventArgs"/> that contains the event data.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Invoked when an unhandled MouseWheel attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.RaiseCameraChangedEvent">
            <summary>
            Raises the camera changed event.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.AnimateOpacity(System.Windows.UIElement,System.Double,System.Double)">
            <summary>
            Animates the opacity of the specified object.
            </summary>
            <param name="obj">
            The object to animate.
            </param>
            <param name="toOpacity">
            The to opacity.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.BackViewHandler(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            The back view event handler.
            </summary>
            <param name="sender">
            The sender. 
            </param>
            <param name="e">
            The event arguments. 
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.BottomViewHandler(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            The bottom view event handler.
            </summary>
            <param name="sender">
            The sender. 
            </param>
            <param name="e">
            The event arguments. 
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.IsModelUpDirectionY">
            <summary>
            Determines whether the model up direction is (0,1,0).
            </summary>
            <returns>
              <c>true</c> if the up direction is (0,1,0); otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.RenderTechniquePropertyChanged">
            <summary>
            Handles the change of the render technique        
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.CameraPropertyChanged">
            <summary>
            Handles changes in the camera properties.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.Clamp(System.Double,System.Double,System.Double)">
            <summary>
            Clamps the specified value between the limits.
            </summary>
            <param name="value">
            The value. 
            </param>
            <param name="min">
            The min. 
            </param>
            <param name="max">
            The max. 
            </param>
            <returns>
            The clamp. 
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.ControlLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the control is loaded.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.ControlUnloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the control is unloaded.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.FrontViewHandler(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            The front view event handler.
            </summary>
            <param name="sender">
            The sender. 
            </param>
            <param name="e">
            The event arguments. 
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.LeftViewHandler(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            The left view event handler.
            </summary>
            <param name="sender">
            The sender. 
            </param>
            <param name="e">
            The event arguments. 
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.OnCompositionTargetRendering(System.Object,System.Windows.Media.RenderingEventArgs)">
            <summary>
            The rendering event handler.
            </summary>
            <param name="sender">
            The sender. 
            </param>
            <param name="e">
            The event arguments. 
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.OnTimeStep(System.Double)">
            <summary>
            The on time step.
            </summary>
            <param name="time">
            The time. 
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.OrthographicChanged">
            <summary>
            Called when the camera type is changed.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.RefreshViewport">
            <summary>
              Refreshes viewport.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.ResetHandler(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Handles the reset command.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.RightViewHandler(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            The right view event handler.
            </summary>
            <param name="sender">
            The sender. 
            </param>
            <param name="e">
            The event arguments. 
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.SetDefaultGestures">
            <summary>
            Sets the default gestures.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.SetTargetHandler(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Handles the SetTarget command.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.StopAnimations">
            <summary>
              The stop animations.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.SubscribeToRenderingEvent">
            <summary>
            The subscribe to rendering event.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.TopViewHandler(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            The top view event handler.
            </summary>
            <param name="sender">
            The sender. 
            </param>
            <param name="e">
            The event arguments. 
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.UnsubscribeRenderingEvent">
            <summary>
            The unsubscribe rendering event.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.UpdateCameraInfo">
            <summary>
            Updates the camera info.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.UpdateFieldOfViewInfo">
            <summary>
            The update field of view info.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.UseDefaultGesturesChanged">
            <summary>
            The UseDefaultGestures property changed.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.ViewCubeClicked(System.Object,HelixToolkit.Wpf.ViewCubeVisual3D.ClickedEventArgs)">
            <summary>
            Handles clicks on the view cube.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:HelixToolkit.Wpf.ViewCubeVisual3D.ClickedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.ViewCubeViewportMouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the mouse enters the view cube.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.ViewCubeViewportMouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the mouse leaves the view cube.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.ZoomExtentsHandler(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Handles the zoom extents command.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.mouseHitModels">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.MouseDownHitTest(System.Windows.Input.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.MouseUpHitTest(System.Windows.Input.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Viewport3DX.MouseMoveHitTest(System.Windows.Input.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.BackgroundColorProperty">
            <summary>
            Background Color property.this.RenderHost
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.CameraChangedEvent">
            <summary>
            The camera changed event.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.CameraInertiaFactorProperty">
            <summary>
            The camera inertia factor property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.CameraInfoProperty">
            <summary>
            The camera info property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.CameraModeProperty">
            <summary>
            The camera mode property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.CameraProperty">
            <summary>
            The camera property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.CameraRotationModeProperty">
            <summary>
            The camera rotation mode property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.ChangeFieldOfViewCursorProperty">
            <summary>
            The change fov cursor property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.ChangeFieldOfViewGestureProperty">
            <summary>
            The change field of view gesture property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.ChangeLookAtGestureProperty">
            <summary>
            The change field of view gesture property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.ChildrenProperty">
            <summary>
            The children property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.CoordinateSystemHeightProperty">
            <summary>
            The coordinate system height property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.CoordinateSystemHorizontalPositionProperty">
            <summary>
            The coordinate system horizontal position property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.CoordinateSystemLabelForegroundProperty">
            <summary>
            The coordinate system label foreground property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.CoordinateSystemLabelXProperty">
            <summary>
            The coordinate system label X property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.CoordinateSystemLabelYProperty">
            <summary>
            The coordinate system label Y property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.CoordinateSystemLabelZProperty">
            <summary>
            The coordinate system label Z property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.CoordinateSystemVerticalPositionProperty">
            <summary>
            The coordinate system vertical position property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.CoordinateSystemWidthProperty">
            <summary>
            The coordinate system width property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.CurrentPositionProperty">
            <summary>
            The current position property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.DebugInfoProperty">
            <summary>
            The debug info property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.DeferredRendererProperty">
            <summary>
            Deferred Render accessor
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.DefaultCameraProperty">
            <summary>
            The default camera property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.EnableCurrentPositionProperty">
            <summary>
            The EnableCurrentPosition property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.FieldOfViewTextProperty">
            <summary>
            The field of view text property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.FpsCounterProperty">
            <summary>
            The FPS counter property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.FrameRateProperty">
            <summary>
            The frame rate property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.FrameRateTextProperty">
            <summary>
            The frame rate text property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.FrontViewGestureProperty">
            <summary>
            The front view gesture property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.InfiniteSpinProperty">
            <summary>
            The infinite spin property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.InfoBackgroundProperty">
            <summary>
            The info background property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.InfoForegroundProperty">
            <summary>
            The info foreground property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.RenderTechniqueProperty">
            <summary>
            The is deferred shading enabled propery
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.IsShadowMappingEnabledProperty">
            <summary>
            The is deferred shading enabled propery
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.IsChangeFieldOfViewEnabledProperty">
            <summary>
            The is change field of view enabled property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.IsPanEnabledProperty">
            <summary>
            The is pan enabled property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.IsRotationEnabledProperty">
            <summary>
            The is rotation enabled property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.IsTouchZoomEnabledProperty">
            <summary>
            The IsTouchZoomEnabled property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.IsZoomEnabledProperty">
            <summary>
            The is zoom enabled property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.LeftRightPanSensitivityProperty">
            <summary>
            The left right pan sensitivity property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.LeftRightRotationSensitivityProperty">
            <summary>
            The left right rotation sensitivity property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.MaximumFieldOfViewProperty">
            <summary>
            The maximum field of view property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.MinimumFieldOfViewProperty">
            <summary>
            The minimum field of view property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.ModelUpDirectionProperty">
            <summary>
            The model up direction property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.OrthographicProperty">
            <summary>
            The orthographic property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.OrthographicToggleGestureProperty">
            <summary>
            The orthographic toggle gesture property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.PageUpDownZoomSensitivityProperty">
            <summary>
            The page up down zoom sensitivity property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.PanCursorProperty">
            <summary>
            The pan cursor property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.RotateAroundMouseDownPointProperty">
            <summary>
            The rotate around mouse down point property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.RotateCursorProperty">
            <summary>
            The rotate cursor property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.RotationSensitivityProperty">
            <summary>
            The rotation sensitivity property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.ShowCameraInfoProperty">
            <summary>
            The show camera info property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.ShowCameraTargetProperty">
            <summary>
            The show camera target property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.ShowCoordinateSystemProperty">
            <summary>
            The show coordinate system property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.ShowFieldOfViewProperty">
            <summary>
            The show field of view property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.ShowFrameRateProperty">
            <summary>
            The show frame rate property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.ShowTriangleCountInfoProperty">
            <summary>
            The show triangle count info property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.ShowViewCubeProperty">
            <summary>
            The show view cube property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.SpinReleaseTimeProperty">
            <summary>
            The spin release time property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.StatusProperty">
            <summary>
            The status property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.SubTitleProperty">
            <summary>
            The sub title property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.SubTitleSizeProperty">
            <summary>
            The sub title size property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.TextBrushProperty">
            <summary>
            The text brush property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.TitleBackgroundProperty">
            <summary>
            The title background property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.TitleFontFamilyProperty">
            <summary>
            The title font family property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.TitleProperty">
            <summary>
            The title property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.TitleSizeProperty">
            <summary>
            The title size property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.TouchModeProperty">
            <summary>
            The touch mode property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.TriangleCountInfoProperty">
            <summary>
            The triangle count info property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.UpDownPanSensitivityProperty">
            <summary>
            The up down Pan sensitivity property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.UpDownRotationSensitivityProperty">
            <summary>
            The up down rotation sensitivity property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.UseDefaultGesturesProperty">
            <summary>
            The use default gestures property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.ViewCubeBackTextProperty">
            <summary>
            The view cube back text property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.ViewCubeBottomTextProperty">
            <summary>
            The view cube bottom text property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.ViewCubeFrontTextProperty">
            <summary>
            The view cube front text property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.ViewCubeHeightProperty">
            <summary>
            The view cube height property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.ViewCubeHorizontalPositionProperty">
            <summary>
            The view cube horizontal position property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.ViewCubeLeftTextProperty">
            <summary>
            The view cube left text property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.ViewCubeOpacityProperty">
            <summary>
            The view cube opacity property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.ViewCubeRightTextProperty">
            <summary>
            The view cube right text property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.ViewCubeTopTextProperty">
            <summary>
            The view cube top text property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.ViewCubeVerticalPositionProperty">
            <summary>
            The view cube vertical position property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.ViewCubeWidthProperty">
            <summary>
            The view cube width property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.ZoomAroundMouseDownPointProperty">
            <summary>
            The zoom around mouse down point property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.ZoomCursorProperty">
            <summary>
            The zoom cursor property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.ZoomExtentsWhenLoadedProperty">
            <summary>
            The zoom extents when loaded property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.ZoomRectangleCursorProperty">
            <summary>
            The zoom rectangle cursor property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.ZoomRectangleGestureProperty">
            <summary>
            The zoom rectangle gesture property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Viewport3DX.ZoomSensitivityProperty">
            <summary>
            The zoom sensitivity property
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.IsMoveEnabled">
            <summary>
              Gets or sets a value indicating whether move is enabled.
            </summary>
            <value> <c>true</c> if move is enabled; otherwise, <c>false</c> . </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.RenderHost">
            <summary>
            Gets the canvas.
            </summary>
            <value>
            The canvas.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.BackgroundColor">
            <summary>
            Background Color
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Wpf.Viewport3DX.CameraChanged">
            <summary>
            Event when a property has been changed
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.Camera">
            <summary>
            Gets or sets the camera.
            </summary>
            <value>
            The camera.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.CameraInertiaFactor">
            <summary>
            Gets or sets the camera inertia factor.
            </summary>
            <value>
            The camera inertia factor.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.CameraInfo">
            <summary>
            Gets or sets the camera info.
            </summary>
            <value>
            The camera info.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.CameraMode">
            <summary>
            Gets or sets the camera mode.
            </summary>
            <value>
            The camera mode.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.CameraRotationMode">
            <summary>
            Gets or sets the camera rotation mode.
            </summary>
            <value>
            The camera rotation mode.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.ChangeFieldOfViewCursor">
            <summary>
            Gets or sets the change field of view cursor.
            </summary>
            <value>
            The change field of view cursor.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.CoordinateSystemHeight">
            <summary>
            Gets or sets the height of the coordinate system viewport.
            </summary>
            <value>
            The height of the coordinate system viewport.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.CoordinateSystemHorizontalPosition">
            <summary>
            Gets or sets the horizontal position of the coordinate system viewport.
            </summary>
            <value>
            The horizontal position.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.CoordinateSystemLabelForeground">
            <summary>
            Gets or sets the color of the coordinate system label.
            </summary>
            <value>
            The color of the coordinate system label.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.CoordinateSystemLabelX">
            <summary>
            Gets or sets the coordinate system label X.
            </summary>
            <value>
            The coordinate system label X.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.CoordinateSystemLabelY">
            <summary>
            Gets or sets the coordinate system label Y.
            </summary>
            <value>
            The coordinate system label Y.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.CoordinateSystemLabelZ">
            <summary>
            Gets or sets the coordinate system label Z.
            </summary>
            <value>
            The coordinate system label Z.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.CoordinateSystemVerticalPosition">
            <summary>
            Gets or sets the vertical position of the coordinate system viewport.
            </summary>
            <value>
            The vertical position.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.CoordinateSystemWidth">
            <summary>
            Gets or sets the width of the coordinate system viewport.
            </summary>
            <value>
            The width of the coordinate system viewport.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.CurrentPosition">
            <summary>
            Gets or sets the current position.
            </summary>
            <value>
            The current position.
            </value>
            <remarks>
            The <see cref="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.EnableCurrentPosition"/> property must be set to true to enable updating of this property.
            </remarks>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.DebugInfo">
            <summary>
            Gets or sets the debug info text.
            </summary>
            <value>
            The debug info text.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.DeferredRenderer">
            <summary>
            Read-Only DP for the deferred renderes (little bit hacky...)
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.DefaultCamera">
            <summary>
            Gets or sets the default camera.
            </summary>
            <value>
            The default camera.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.EnableCurrentPosition">
            <summary>
            Gets or sets a value indicating whether calculation of the <see cref="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.CurrentPosition"/> property is enabled.
            </summary>
            <value>
            <c>true</c> if calculation is enabled; otherwise, <c>false</c> .
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.FieldOfViewText">
            <summary>
            Gets or sets the field of view text.
            </summary>
            <value>
            The field of view text.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.FpsCounter">
            <summary>
            Gets the FPS counter.
            </summary>
            <value>
            The FPS counter.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.FrameRate">
            <summary>
            Gets or sets the frame rate.
            </summary>
            <value>
            The frame rate.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.FrameRateText">
            <summary>
            Gets or sets the frame rate text.
            </summary>
            <value>
            The frame rate text.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.InfiniteSpin">
            <summary>
            Gets or sets a value indicating whether infinite spin is enabled.
            </summary>
            <value>
            <c>true</c> if infinite spin is enabled; otherwise, <c>false</c> .
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.InfoBackground">
            <summary>
            Gets or sets the background brush for the CameraInfo and TriangleCount fields.
            </summary>
            <value>
            The info background.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.InfoForeground">
            <summary>
            Gets or sets the foreground brush for informational text.
            </summary>
            <value>
            The foreground brush.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.RenderTechnique">
            <summary>
            Gets or sets value for the shading model shading is used
            </summary>
            <value>
            <c>true</c> if deferred shading is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.IsShadowMappingEnabled">
            <summary>
            Gets or sets a value indicating whether shadow mapping is enabled
            </summary>
            <value>
            <c>true</c> if deferred shading is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.IsChangeFieldOfViewEnabled">
            <summary>
            Gets or sets a value indicating whether change field of view is enabled.
            </summary>
            <value>
            <c>true</c> if change field of view is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.IsPanEnabled">
            <summary>
            Gets or sets a value indicating whether pan is enabled.
            </summary>
            <value>
            <c>true</c> if pan is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.IsRotationEnabled">
            <summary>
            Gets or sets a value indicating whether rotation is enabled.
            </summary>
            <value>
            <c>true</c> if rotation is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.IsTouchZoomEnabled">
            <summary>
            Gets or sets a value indicating whether touch zoom (pinch gesture) is enabled.
            </summary>
            <value>
            <c>true</c> if touch zoom is enabled; otherwise, <c>false</c> .
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.IsZoomEnabled">
            <summary>
            Gets or sets a value indicating whether zoom is enabled.
            </summary>
            <value>
            <c>true</c> if zoom is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.LeftRightPanSensitivity">
            <summary>
            Gets or sets the sensitivity for pan by the left and right keys.
            </summary>
            <value>
            The pan sensitivity.
            </value>
            <remarks>
            Use -1 to invert the pan direction.
            </remarks>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.LeftRightRotationSensitivity">
            <summary>
            Gets or sets the sensitivity for rotation by the left and right keys.
            </summary>
            <value>
            The rotation sensitivity.
            </value>
            <remarks>
            Use -1 to invert the rotation direction.
            </remarks>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.MaximumFieldOfView">
            <summary>
            Gets or sets the maximum field of view.
            </summary>
            <value>
            The maximum field of view.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.MinimumFieldOfView">
            <summary>
            Gets or sets the minimum field of view.
            </summary>
            <value>
            The minimum field of view.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.ModelUpDirection">
            <summary>
            Gets or sets the model up direction.
            </summary>
            <value>
            The model up direction.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.Orthographic">
            <summary>
            Gets or sets a value indicating whether an orthographic camera should be used.
            </summary>
            <value>
            <c>true</c> if orthographic; otherwise, <c>false</c> .
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.PageUpDownZoomSensitivity">
            <summary>
            Gets or sets the sensitivity for zoom by the page up and page down keys.
            </summary>
            <value>
            The zoom sensitivity.
            </value>
            <remarks>
            Use -1 to invert the zoom direction.
            </remarks>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.PanCursor">
            <summary>
            Gets or sets the pan cursor.
            </summary>
            <value>
            The pan cursor.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.RotateAroundMouseDownPoint">
            <summary>
            Gets or sets a value indicating whether to rotate around the mouse down point.
            </summary>
            <value>
            <c>true</c> if rotating around mouse down point; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.RotateCursor">
            <summary>
            Gets or sets the rotate cursor.
            </summary>
            <value>
            The rotate cursor.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.RotationSensitivity">
            <summary>
            Gets or sets the rotation sensitivity.
            </summary>
            <value>
            The rotation sensitivity.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.ShowCameraInfo">
            <summary>
            Gets or sets a value indicating whether to show camera info.
            </summary>
            <value>
            <c>true</c> if camera info should be shown; otherwise, <c>false</c> .
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.ShowCameraTarget">
            <summary>
            Gets or sets a value indicating whether to show the camera target adorner.
            </summary>
            <value>
            <c>true</c> if camera target should be shown; otherwise, <c>false</c> .
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.ShowCoordinateSystem">
            <summary>
            Gets or sets a value indicating whether to show the coordinate system.
            </summary>
            <value>
            <c>true</c> if coordinate system should be shown; otherwise, <c>false</c> .
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.ShowFieldOfView">
            <summary>
            Gets or sets a value indicating whether to show field of view.
            </summary>
            <value>
            <c>true</c> if field of view should be shown; otherwise, <c>false</c> .
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.ShowFrameRate">
            <summary>
            Gets or sets a value indicating whether to show frame rate.
            </summary>
            <value>
            <c>true</c> if frame rate should be shown; otherwise, <c>false</c> .
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.ShowTriangleCountInfo">
            <summary>
            Gets or sets a value indicating whether to show the total number of triangles in the scene.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.ShowViewCube">
            <summary>
            Gets or sets a value indicating whether to show the view cube.
            </summary>
            <value>
            <c>true</c> if the view cube should be shown; otherwise, <c>false</c> .
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.SpinReleaseTime">
            <summary>
            Gets or sets the spin release time in milliseconds (maximum allowed time to start a spin).
            </summary>
            <value>
            The spin release time (in milliseconds).
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.Status">
            <summary>
            Gets or sets the status.
            </summary>
            <value>
            The status.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.SubTitle">
            <summary>
            Gets or sets the sub title.
            </summary>
            <value>
            The sub title.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.SubTitleSize">
            <summary>
            Gets or sets the size of the sub title.
            </summary>
            <value>
            The size of the sub title.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.TextBrush">
            <summary>
            Gets or sets the text brush.
            </summary>
            <value>
            The text brush.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.TitleBackground">
            <summary>
            Gets or sets the title background brush.
            </summary>
            <value>
            The title background.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.TitleFontFamily">
            <summary>
            Gets or sets the title font family.
            </summary>
            <value>
            The title font family.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.TitleSize">
            <summary>
            Gets or sets the size of the title.
            </summary>
            <value>
            The size of the title.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.TouchMode">
            <summary>
            Gets or sets the touch mode.
            </summary>
            <value>
            The touch mode.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.TriangleCountInfo">
            <summary>
            Gets or sets TriangleCountInfo.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.UpDownPanSensitivity">
            <summary>
            Gets or sets the sensitivity for pan by the up and down keys.
            </summary>
            <value>
            The pan sensitivity.
            </value>
            <remarks>
            Use -1 to invert the pan direction.
            </remarks>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.UpDownRotationSensitivity">
            <summary>
            Gets or sets the sensitivity for rotation by the up and down keys.
            </summary>
            <value>
            The rotation sensitivity.
            </value>
            <remarks>
            Use -1 to invert the rotation direction.
            </remarks>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.UseDefaultGestures">
            <summary>
            Gets or sets a value indicating whether to use default mouse/keyboard gestures.
            </summary>
            <value>
              <c>true</c> if default gestures should be used; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.ViewCubeBackText">
            <summary>
            Gets or sets the view cube back text.
            </summary>
            <value>
            The view cube back text.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.ViewCubeBottomText">
            <summary>
            Gets or sets the view cube bottom text.
            </summary>
            <value>
            The view cube bottom text.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.ViewCubeFrontText">
            <summary>
            Gets or sets the view cube front text.
            </summary>
            <value>
            The view cube front text.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.ViewCubeHeight">
            <summary>
            Gets or sets the height of the view cube viewport.
            </summary>
            <value>
            The height of the view cube viewport.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.ViewCubeHorizontalPosition">
            <summary>
            Gets or sets the horizontal position of the view cube viewport.
            </summary>
            <value>
            The horizontal position.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.ViewCubeLeftText">
            <summary>
            Gets or sets the view cube left text.
            </summary>
            <value>
            The view cube left text.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.ViewCubeOpacity">
            <summary>
            Gets or sets the opacity of the ViewCube when inactive.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.ViewCubeRightText">
            <summary>
            Gets or sets the view cube right text.
            </summary>
            <value>
            The view cube right text.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.ViewCubeTopText">
            <summary>
            Gets or sets the view cube top text.
            </summary>
            <value>
            The view cube top text.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.ViewCubeVerticalPosition">
            <summary>
            Gets or sets the vertical position of view cube viewport.
            </summary>
            <value>
            The vertical position.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.ViewCubeWidth">
            <summary>
            Gets or sets the width of the view cube viewport.
            </summary>
            <value>
            The width of the view cube viewport.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.ZoomAroundMouseDownPoint">
            <summary>
            Gets or sets a value indicating whether to zoom around the mouse down point.
            </summary>
            <value>
            <c>true</c> if zooming around the mouse down point; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.ZoomCursor">
            <summary>
            Gets or sets the zoom cursor.
            </summary>
            <value>
            The zoom cursor.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.ZoomExtentsWhenLoaded">
            <summary>
            Gets or sets a value indicating whether to Zoom extents when the control has loaded.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.ZoomRectangleCursor">
            <summary>
            Gets or sets the zoom rectangle cursor.
            </summary>
            <value>
            The zoom rectangle cursor.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Viewport3DX.ZoomSensitivity">
            <summary>
            Gets or sets the zoom sensitivity.
            </summary>
            <value>
            The zoom sensitivity.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.Core.Box3">
            <summary>
            Struct for a 3dimensional Box
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Core.Box3.Min">
            <summary>
            3D Vectors defininge the Box
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Core.Box3.Max">
            <summary>
            3D Vectors defininge the Box
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Core.Box3.#ctor(SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Constructor for the Box
            </summary>
            <param name="min">Minimum Box-Values</param>
            <param name="max">Maximum Box-Values</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Core.Box3.Contains(SharpDX.Vector3)">
            <summary>
            Returns true if the box contains the given point.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Core.Box3.Contains(HelixToolkit.SharpDX.Wpf.Core.Box3)">
            <summary>
            Returns true if the box completely contains the given box.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Core.Box3.ExtendBy(HelixToolkit.SharpDX.Wpf.Core.Box3)">
            <summary>
            Extends the box to contain the supplied box.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Core.Box3.ExtendBy(SharpDX.Vector3)">
            <summary>
            Extends the box to contain the supplied value.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Core.Box3.ExtendXBy(System.Single)">
            <summary>
            Extends the box to contain the supplied value.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Core.Box3.ExtendYBy(System.Single)">
            <summary>
            Extends the box to contain the supplied value.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Core.Box3.ExtendZBy(System.Single)">
            <summary>
            Extends the box to contain the supplied value.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Core.Box3.Intersects(HelixToolkit.SharpDX.Wpf.Core.Box3)">
            <summary>
            Returns true if 2 boxes intersect each other.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Core.Box3.Intersects(HelixToolkit.SharpDX.Wpf.Core.Box3,SharpDX.Vector3)">
            <summary>
            Returns true if 2 boxes intersect each other with tolerance parameter.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Core.Box3.Intersects(HelixToolkit.SharpDX.Wpf.Core.Box3,System.Single)">
            <summary>
            Returns true if 2 boxes intersect each other with tolerance parameter.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Core.Box3.Union(HelixToolkit.SharpDX.Wpf.Core.Box3)">
            <summary>
            
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Core.Box3.Intersection(HelixToolkit.SharpDX.Wpf.Core.Box3)">
            <summary>
            
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Core.Box3.Union(HelixToolkit.SharpDX.Wpf.Core.Box3,HelixToolkit.SharpDX.Wpf.Core.Box3)">
            <summary>
            
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Core.Box3.Intersection(HelixToolkit.SharpDX.Wpf.Core.Box3,HelixToolkit.SharpDX.Wpf.Core.Box3)">
            <summary>
            
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Core.Box3.FromPoints(SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Creates box from 2 points which need not be Min and Max.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Core.Box3.FromPoints(System.Collections.Generic.IEnumerable{SharpDX.Vector3})">
            <summary>
            Creates box from a set points which need not be Min and Max.
            </summary>
            <param name="points"></param>        
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Core.Box3.Size">
            <summary>
            Calculates size of the box.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Core.Box3.IsValid">
            <summary>
            True if the box is valid.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.CuttingEarsTriangulator">
            <summary>
            A cutting ears triangulator for simple polygons with no holes. O(n^2)
            </summary>
            <remarks>
            Based on http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml
            References
            http://en.wikipedia.org/wiki/Polygon_triangulation
            http://computacion.cs.cinvestav.mx/~anzures/geom/triangulation.php
            http://www.codeproject.com/KB/recipes/cspolygontriangulation.aspx
            </remarks>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.CuttingEarsTriangulator.Epsilon">
            <summary>
            The epsilon.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CuttingEarsTriangulator.Triangulate(System.Collections.Generic.IList{SharpDX.Vector2})">
            <summary>
            Triangulate a polygon using the cutting ears algorithm.
            </summary>
            <remarks>
            The algorithm does not support holes.
            </remarks>
            <param name="contour">
            the polygon contour
            </param>
            <returns>
            collection of triangle points
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CuttingEarsTriangulator.Area(System.Collections.Generic.IList{SharpDX.Vector2})">
            <summary>
            Calculates the area.
            </summary>
            <param name="contour">The contour.</param>
            <returns>The area.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CuttingEarsTriangulator.InsideTriangle(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Decide if point (Px,Py) is inside triangle defined by (Ax,Ay) (Bx,By) (Cx,Cy).
            </summary>
            <param name="Ax">
            The ax.
            </param>
            <param name="Ay">
            The ay.
            </param>
            <param name="Bx">
            The bx.
            </param>
            <param name="By">
            The by.
            </param>
            <param name="Cx">
            The cx.
            </param>
            <param name="Cy">
            The cy.
            </param>
            <param name="Px">
            The px.
            </param>
            <param name="Py">
            The py.
            </param>
            <returns>
            The inside triangle.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CuttingEarsTriangulator.Snip(System.Collections.Generic.IList{SharpDX.Vector2},System.Int32,System.Int32,System.Int32,System.Int32,System.Int32[])">
            <summary>
            The snip.
            </summary>
            <param name="contour">The contour.</param>
            <param name="u">The u.</param>
            <param name="v">The v.</param>
            <param name="w">The w.</param>
            <param name="n">The n.</param>
            <param name="V">The v.</param>
            <returns>The snip.</returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.Polygon">
            <summary>
            Represents a 2D polygon.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Polygon.points">
            <summary>
            The points.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Polygon.Triangulate">
            <summary>
            Triangulate the polygon by cutting ears
            </summary>
            <returns>An index collection.</returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Polygon.Points">
            <summary>
            Gets or sets the points.
            </summary>
            <value>The points.</value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.Polygon3D">
            <summary>
            Represents a 3D polygon.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Polygon3D.points">
            <summary>
            The points.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Polygon3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Wpf.Polygon3D"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Polygon3D.#ctor(System.Collections.Generic.IList{SharpDX.Vector3})">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Wpf.Polygon3D"/> class.
            </summary>
            <param name="pts">
            The PTS.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Polygon3D.Flatten">
            <summary>
            Flattens this polygon.
            </summary>
            <returns>
            The 2D polygon.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Polygon3D.GetNormal">
            <summary>
            Gets the normal of the polygon.
            </summary>
            <returns>
            The normal.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Polygon3D.IsPlanar">
            <summary>
            Determines whether this polygon is planar.
            </summary>
            <returns>
            The is planar.
            </returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Polygon3D.Points">
            <summary>
            Gets or sets the points.
            </summary>
            <value>The points.</value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.HelixToolkitException">
            <summary>
            Represents errors that occurs in the Helix 3D Toolkit.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.HelixToolkitException.#ctor(System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Wpf.HelixToolkitException"/> class.
            </summary>
            <param name="formatString">
            The format string.
            </param>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.Ray3">
            <summary>
            Represents a 3D ray.
            </summary>    
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Ray3.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Wpf.Ray3"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Ray3.#ctor(SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Wpf.Ray3"/> class.
            </summary>
            <param name="origin">
            The origin.
            </param>
            <param name="direction">
            The sender.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Ray3.GetNearest(SharpDX.Vector3)">
            <summary>
            Gets the point on the ray that is nearest the specified point.
            </summary>
            <param name="p3">
            The point.
            </param>
            <returns>
            The nearest point on the ray.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Ray3.PlaneIntersection(SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Finds the intersection with a plane.
            </summary>
            <param name="position">The position.</param>
            <param name="normal">The normal.</param>
            <returns>The intersection point.</returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Ray3.Direction">
            <summary>
            Gets or sets the direction.
            </summary>
            <value>The direction.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Ray3.Origin">
            <summary>
            Gets or sets the origin.
            </summary>
            <value>The origin.</value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.Ray3D">
            <summary>
            Represents a 3D ray.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Ray3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Wpf.Ray3D"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Ray3D.#ctor(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Vector3D)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Wpf.Ray3D"/> class.
            </summary>
            <param name="o">
            The o.
            </param>
            <param name="d">
            The sender.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Ray3D.#ctor(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Wpf.Ray3D"/> class.
            </summary>
            <param name="p0">
            The p0.
            </param>
            <param name="p1">
            The p1.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Ray3D.GetNearest(System.Windows.Media.Media3D.Point3D)">
            <summary>
            Gets the point on the ray that is nearest the specified point.
            </summary>
            <param name="p3">
            The point.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Ray3D.PlaneIntersection(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Vector3D)">
            <summary>
            Finds the intersection with a plane.
            </summary>
            <param name="position">The position.</param>
            <param name="normal">The normal.</param>
            <returns>The intersection point.</returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Ray3D.Direction">
            <summary>
            Gets or sets the direction.
            </summary>
            <value>The direction.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Ray3D.Origin">
            <summary>
            Gets or sets the origin.
            </summary>
            <value>The origin.</value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.BaseViewModel">
            <summary>
            Base ViewModel for Demo Applications?
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.CameraExtensions">
            <summary>
            Provides extension methods for the cameras.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CameraExtensions.AnimateTo(HelixToolkit.SharpDX.Camera,System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D,System.Double)">
            <summary>
            Animates the camera position and directions.
            </summary>
            <param name="camera">
            The camera to animate.
            </param>
            <param name="newPosition">
            The position to animate to.
            </param>
            <param name="newDirection">
            The direction to animate to.
            </param>
            <param name="newUpDirection">
            The up direction to animate to.
            </param>
            <param name="animationTime">
            Animation time in milliseconds.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CameraExtensions.AnimateWidth(HelixToolkit.SharpDX.OrthographicCamera,System.Double,System.Double)">
            <summary>
            Animates the orthographic width.
            </summary>
            <param name="camera">
            An orthographic camera.
            </param>
            <param name="newWidth">
            The width to animate to.
            </param>
            <param name="animationTime">
            Animation time in milliseconds
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CameraExtensions.ChangeDirection(HelixToolkit.SharpDX.ProjectionCamera,System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D,System.Double)">
            <summary>
            Changes the direction of a camera.
            </summary>
            <param name="camera">
            The camera.
            </param>
            <param name="newLookDir">
            The new look direction.
            </param>
            <param name="newUpDirection">
            The new up direction.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CameraExtensions.CopyTo(HelixToolkit.SharpDX.Camera,HelixToolkit.SharpDX.Camera)">
            <summary>
            Copies the specified camera, converts field of view/width if necessary.
            </summary>
            <param name="source">
            The source camera.
            </param>
            <param name="dest">
            The destination camera.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CameraExtensions.CreateDefaultCamera">
            <summary>
            Creates a default perspective camera.
            </summary>
            <returns>A perspective camera.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CameraExtensions.FindPanVector(HelixToolkit.SharpDX.Camera,System.Double,System.Double)">
            <summary>
            Finds the pan vector.
            </summary>
            <param name="camera">The camera.</param>
            <param name="dx">The delta x.</param>
            <param name="dy">The delta y.</param>
            <returns>
            The <see cref="T:System.Windows.Media.Media3D.Vector3D"/> .
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CameraExtensions.GetInfo(HelixToolkit.SharpDX.Camera)">
            <summary>
            Gets an information string about the specified camera.
            </summary>
            <param name="camera">
            The camera.
            </param>
            <returns>
            The get info.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CameraExtensions.GetInverseViewProjectionMatrix3D(HelixToolkit.SharpDX.Camera,System.Double)">
            <summary>
            Gets the inverse camera transform.
            </summary>
            <param name="camera">
            The camera.
            </param>
            <param name="aspectRatio">
            The aspect ratio.
            </param>
            <returns>
            The inverse transform.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CameraExtensions.GetInverseViewProjectionMatrix(HelixToolkit.SharpDX.Camera,System.Double)">
            <summary>
            Gets the inverse camera transform.
            </summary>
            <param name="camera">
            The camera.
            </param>
            <param name="aspectRatio">
            The aspect ratio.
            </param>
            <returns>
            The inverse transform.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CameraExtensions.GetProjectionMatrix3D(HelixToolkit.SharpDX.Camera,System.Double)">
            <summary>
            Gets the projection matrix for the specified camera.
            </summary>
            <param name="camera">The camera.</param>
            <param name="aspectRatio">The aspect ratio.</param>
            <returns>The projection matrix.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CameraExtensions.GetProjectionMatrix(HelixToolkit.SharpDX.Camera,System.Double)">
            <summary>
            Gets the projection matrix for the specified camera.
            </summary>
            <param name="camera">The camera.</param>
            <param name="aspectRatio">The aspect ratio.</param>
            <returns>The projection matrix.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CameraExtensions.GetViewProjectionMatrix3D(HelixToolkit.SharpDX.Camera,System.Double)">
            <summary>
            Get the combined view and projection transform
            </summary>
            <param name="camera">The camera.</param>
            <param name="aspectRatio">The aspect ratio.</param>
            <returns>The total view and projection transform.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CameraExtensions.GetViewProjectionMatrix(HelixToolkit.SharpDX.Camera,System.Double)">
            <summary>
            Get the combined view and projection transform
            </summary>
            <param name="camera">The camera.</param>
            <param name="aspectRatio">The aspect ratio.</param>
            <returns>The total view and projection transform.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CameraExtensions.GetViewMatrix3D(HelixToolkit.SharpDX.Camera)">
            <summary>
            Obtains the view transform matrix for a camera. (see page 327)
            </summary>
            <param name="camera">
            Camera to obtain the ViewMatrix for
            </param>
            <returns>
            A Matrix object with the camera view transform matrix, or a Matrix with all zeros if the "camera" is null.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CameraExtensions.GetViewMatrix(HelixToolkit.SharpDX.Camera)">
            <summary>
            Obtains the view transform matrix for a camera. (see page 327)
            </summary>
            <param name="camera">
            Camera to obtain the ViewMatrix for
            </param>
            <returns>
            A Matrix object with the camera view transform matrix, or a Matrix with all zeros if the "camera" is null.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CameraExtensions.LookAt(HelixToolkit.SharpDX.Camera,System.Windows.Media.Media3D.Point3D,System.Double)">
            <summary>
            Set the camera target point without changing the look direction.
            </summary>
            <param name="camera">
            The camera.
            </param>
            <param name="target">
            The target.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CameraExtensions.LookAt(HelixToolkit.SharpDX.Camera,System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Vector3D,System.Double)">
            <summary>
            Set the camera target point and look direction
            </summary>
            <param name="camera">
            The camera.
            </param>
            <param name="target">
            The target.
            </param>
            <param name="newLookDirection">
            The new look direction.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CameraExtensions.LookAt(HelixToolkit.SharpDX.Camera,System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D,System.Double)">
            <summary>
            Set the camera target point and directions
            </summary>
            <param name="camera">
            The camera.
            </param>
            <param name="target">
            The target.
            </param>
            <param name="newLookDirection">
            The new look direction.
            </param>
            <param name="newUpDirection">
            The new up direction.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CameraExtensions.LookAt(HelixToolkit.SharpDX.Camera,System.Windows.Media.Media3D.Point3D,System.Double,System.Double)">
            <summary>
            Set the camera target point and camera distance.
            </summary>
            <param name="camera">
            The camera.
            </param>
            <param name="target">
            The target point.
            </param>
            <param name="distance">
            The distance to the camera.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CameraExtensions.Reset(HelixToolkit.SharpDX.Camera)">
            <summary>
            Resets the specified camera.
            </summary>
            <param name="camera">
            The camera.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CameraExtensions.Reset(HelixToolkit.SharpDX.PerspectiveCamera)">
            <summary>
            Resets the specified perspective camera.
            </summary>
            <param name="camera">
            The camera.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CameraExtensions.Reset(HelixToolkit.SharpDX.OrthographicCamera)">
            <summary>
            Resets the specified orthographic camera.
            </summary>
            <param name="camera">
            The camera.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CameraExtensions.ZoomExtents(HelixToolkit.SharpDX.Camera,HelixToolkit.SharpDX.Wpf.Viewport3DX,System.Double)">
            <summary>
            Zooms to fit the extents of the specified viewport.
            </summary>
            <param name="camera">
            The actual camera.
            </param>
            <param name="viewport">
            The viewport.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CameraExtensions.ZoomExtents(HelixToolkit.SharpDX.Camera,HelixToolkit.SharpDX.Wpf.Viewport3DX,System.Windows.Media.Media3D.Rect3D,System.Double)">
            <summary>
            Zooms to fit the specified bounding rectangle.
            </summary>
            <param name="camera">
            The actual camera.
            </param>
            <param name="viewport">
            The viewport.
            </param>
            <param name="bounds">
            The bounding rectangle.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CameraExtensions.ZoomExtents(HelixToolkit.SharpDX.Camera,HelixToolkit.SharpDX.Wpf.Viewport3DX,System.Windows.Media.Media3D.Point3D,System.Double,System.Double)">
            <summary>
            Zooms to fit the specified sphere.
            </summary>
            <param name="camera">
            The camera.
            </param>
            <param name="viewport">
            The viewport.
            </param>
            <param name="center">
            The center of the sphere.
            </param>
            <param name="radius">
            The radius of the sphere.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CameraExtensions.ZoomToRectangle(HelixToolkit.SharpDX.Camera,HelixToolkit.SharpDX.Wpf.Viewport3DX,System.Windows.Rect)">
            <summary>
            Zooms the camera to the specified rectangle.
            </summary>
            <param name="camera">
            The camera.
            </param>
            <param name="viewport">
            The viewport.
            </param>
            <param name="zoomRectangle">
            The zoom rectangle.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CameraExtensions.MoveCameraPosition(HelixToolkit.SharpDX.Camera,System.Windows.Media.Media3D.Vector3D)">
            <summary>
            Moves the camera position.
            </summary>
            <param name="camera">The camera.</param>
            <param name="delta">The delta.</param>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Techniques.RenderBlinn">
            <summary>
            Names of techniques which are implemented by default
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.EffectsManager.data">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.EffectsManager.TechniquesDict">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.EffectsManager.ShadersDict">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.EffectsManager.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.EffectsManager.Finalize">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.EffectsManager.InitEffects(SharpDX.Direct3D11.Device)">
            <summary>
            
            </summary>
            <param name="device"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.EffectsManager.RegisterEffect(System.String,System.String,SharpDX.D3DCompiler.ShaderFlags,SharpDX.D3DCompiler.EffectFlags)">
            <summary>
            
            </summary>
            <param name="shaderEffectString"></param>
            <param name="techniqueName"></param>
            <param name="sFlags"></param>
            <param name="eFlags"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.EffectsManager.RegisterEffect(System.String,System.String[],SharpDX.D3DCompiler.ShaderFlags,SharpDX.D3DCompiler.EffectFlags)">
            <summary>
            
            </summary>
            <param name="shaderEffectString"></param>
            <param name="techniqueNames"></param>
            <param name="sFlags"></param>
            <param name="eFlags"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.EffectsManager.RegisterEffect(System.Byte[],System.String[],SharpDX.D3DCompiler.EffectFlags)">
            <summary>
            
            </summary>
            <param name="shaderEffectBytecode"></param>
            <param name="techniqueNames"></param>
            <param name="eFlags"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.EffectsManager.RegisterTechnique(System.String)">
            <summary>
            Register a techniqe to the Effects container 
            This technique will be visible globally and will be also
            exposed in the RenderTechniqes combo-box in the GUI
            </summary>
            <param name="techniqeName">Name of the Technique, it must be identical to the name used in the FX file!</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.EffectsManager.RegisterLayout(System.String,SharpDX.Direct3D11.InputLayout)">
            <summary>
            
            </summary>
            <param name="techniqueName"></param>
            <param name="layout"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.EffectsManager.RegisterLayout(System.String[],SharpDX.Direct3D11.InputLayout)">
            <summary>
            
            </summary>
            <param name="techniqueNames"></param>
            <param name="layout"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.EffectsManager.GetEffect(System.String)">
            <summary>
            
            </summary>
            <param name="effectName"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.EffectsManager.GetLayout(System.String)">
            <summary>
            
            </summary>
            <param name="effectName"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.EffectsManager.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.EffectsManager.IncludeHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.HitTestResult">
            <summary>
            Provides a hit test result.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.HitTestResult.Distance">
            <summary>
            Gets the distance between the hit intersection and the inner coordinate space
            of the System.Windows.Media.Media3D.Visual3D which initiated the hit test.
            
            Double that indicates the distance between the hit intersection and the inner
            coordinate space of the System.Windows.Media.Media3D.Visual3D which initiated
            the hit test.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.HitTestResult.ModelHit">
            <summary>
            Gets the Model3D intersected by the ray along which the hit test was performed.
            Model3D intersected by the ray.
            </summary>        
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.HitTestResult.PointHit">
            <summary>
            Gets the Point3D at the intersection between the ray along which the hit
            test was performed and the hit object.
            Point3D at which the hit object was intersected by the ray.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.HitTestResult.NormalAtHit">
            <summary>
            The normal vector of the triangle hit.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.HitTestResult.IsValid">
            <summary>
            Indicates if this Result has data from a valid hit.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.HitTestResult.Tag">
            <summary>
            This is a tag to add additional data.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.RelayCommand">
            <summary>
            A command whose sole purpose is to 
            relay its functionality to other
            objects by invoking delegates. The
            default return value for the CanExecute
            method is 'true'.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.RelayCommand.#ctor(System.Action{System.Object})">
            <summary>
            Creates a new command that can always execute.
            </summary>
            <param name="execute">The execution logic.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.RelayCommand.#ctor(System.Action{System.Object},System.Predicate{System.Object})">
            <summary>
            Creates a new command.
            </summary>
            <param name="execute">The execution logic.</param>
            <param name="canExecute">The execution status logic.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.FpsCounter.AddFrame(System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="ts"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.FpsCounter.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.FpsCounter.UpdateValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.FpsCounter.AveragingInterval">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.FpsCounter.Value">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.CameraMode">
            <summary>
            Camera movement modes.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.CameraMode.Inspect">
            <summary>
            Orbits around a point (fixed target position, move closer target when zooming).
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.CameraMode.WalkAround">
            <summary>
            Walk around (fixed camera position when rotating, move in camera direction when zooming).
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.CameraMode.FixedPosition">
            <summary>
            Fixed camera target, change field of view when zooming.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.CameraRotationMode">
            <summary>
            Camera rotation modes.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.CameraRotationMode.Turntable">
            <summary>
            Turntable is constrained to two axes of rotation (model up and right direction)
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.CameraRotationMode.Turnball">
            <summary>
            Turntable using three axes (look direction, right direction and up direction (on the left/right edges)).
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.CameraRotationMode.Trackball">
            <summary>
            Using a virtual trackball.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.CameraSetting">
            <summary>
            Represents camera settings.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CameraSetting.#ctor(HelixToolkit.SharpDX.ProjectionCamera)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Wpf.CameraSetting"/> class.
            </summary>
            <param name="camera">
            The camera.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CameraSetting.UpdateCamera(HelixToolkit.SharpDX.ProjectionCamera)">
            <summary>
            Sets the properties of the specified camera to the settings stored in this object.
            </summary>
            <param name="camera">
            The camera.
            </param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.CameraSetting.FarPlaneDistance">
            <summary>
            Gets or sets FarPlaneDistance.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.CameraSetting.FieldOfView">
            <summary>
            Gets or sets FieldOfView.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.CameraSetting.LookDirection">
            <summary>
            Gets or sets LookDirection.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.CameraSetting.NearPlaneDistance">
            <summary>
            Gets or sets NearPlaneDistance.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.CameraSetting.Position">
            <summary>
            Gets or sets Position.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.CameraSetting.UpDirection">
            <summary>
            Gets or sets UpDirection.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.CameraSetting.Width">
            <summary>
            Gets or sets Width.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.ManipulationEventArgs">
            <summary>
            Provides data for the manipulation events.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ManipulationEventArgs.#ctor(System.Windows.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Wpf.ManipulationEventArgs"/> class.
            </summary>
            <param name="currentPosition">
            The current position.
            </param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.ManipulationEventArgs.CurrentPosition">
            <summary>
            Gets the current position.
            </summary>
            <value>The current position.</value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.MouseGestureHandler">
            <summary>
            An abstract base class for the mouse gesture handlers.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MouseGestureHandler.#ctor(HelixToolkit.SharpDX.Wpf.Viewport3DX)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Wpf.MouseGestureHandler"/> class.
            </summary>
            <param name="viewport">
            The viewport.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MouseGestureHandler.Completed(HelixToolkit.SharpDX.Wpf.ManipulationEventArgs)">
            <summary>
            Occurs when the manipulation is completed.
            </summary>
            <param name="e">
            The <see cref="T:HelixToolkit.SharpDX.Wpf.ManipulationEventArgs"/> instance containing the event data.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MouseGestureHandler.Delta(HelixToolkit.SharpDX.Wpf.ManipulationEventArgs)">
            <summary>
            Occurs when the position is changed during a manipulation.
            </summary>
            <param name="e">
            The <see cref="T:HelixToolkit.SharpDX.Wpf.ManipulationEventArgs"/> instance containing the event data.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MouseGestureHandler.Execute(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Executes the mouse gesture command.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MouseGestureHandler.Started(HelixToolkit.SharpDX.Wpf.ManipulationEventArgs)">
            <summary>
            Occurs when the manipulation is started.
            </summary>
            <param name="e">
            The <see cref="T:HelixToolkit.SharpDX.Wpf.ManipulationEventArgs"/> instance containing the event data.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MouseGestureHandler.UnProject(System.Windows.Point,System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Vector3D)">
            <summary>
            Un-projects a point from the screen (2D) to a point on plane (3D)
            </summary>
            <param name="p">
            The 2D point.
            </param>
            <param name="position">
            plane position
            </param>
            <param name="normal">
            plane normal
            </param>
            <returns>
            A 3D point.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MouseGestureHandler.UnProject(System.Windows.Point)">
            <summary>
            Un-projects a point from the screen (2D) to a point on the plane trough the camera target point.
            </summary>
            <param name="p">
            The 2D point.
            </param>
            <returns>
            A 3D point.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MouseGestureHandler.CanExecute">
            <summary>
            Occurs when the command associated with this handler initiates a check to determine whether the command can be executed on the command target.
            </summary>
            <returns>
            True if the execution can continue.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MouseGestureHandler.GetCursor">
            <summary>
            Gets the cursor for the gesture.
            </summary>
            <returns>
            A cursor.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MouseGestureHandler.GetRay(System.Windows.Point)">
            <summary>
            Get the ray into the view volume given by the position in 2D (screen coordinates)
            </summary>
            <param name="position">
            A 2D point.
            </param>
            <returns>
            A ray
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MouseGestureHandler.OnInertiaStarting(System.Int32)">
            <summary>
            Called when inertia is starting.
            </summary>
            <param name="elapsedTime">
            The elapsed time (milliseconds).
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MouseGestureHandler.OnMouseDown(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the mouse button is pressed down.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The <see cref="T:System.Windows.Input.MouseEventArgs"/> instance containing the event data.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MouseGestureHandler.OnMouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            The on mouse move.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MouseGestureHandler.OnMouseUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            The on mouse up.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MouseGestureHandler.Project(System.Windows.Media.Media3D.Point3D)">
            <summary>
            Calculate the screen position of a 3D point.
            </summary>
            <param name="p">
            The 3D point.
            </param>
            <returns>
            The 2D point.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MouseGestureHandler.SetMouseDownPoint(System.Windows.Point)">
            <summary>
            Sets mouse down point.
            </summary>
            <param name="position">
            The position.
            </param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.MouseGestureHandler.Origin">
            <summary>
            Gets the origin.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.MouseGestureHandler.Camera">
            <summary>
            Gets the camera.
            </summary>
            <value>The camera.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.MouseGestureHandler.CameraMode">
            <summary>
            Gets the camera mode.
            </summary>
            <value>The camera mode.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.MouseGestureHandler.LastPoint">
            <summary>
            Gets or sets the last point (in 2D screen coordinates).
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.MouseGestureHandler.LastPoint3D">
            <summary>
            Gets or sets the last point (in 3D world coordinates).
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.MouseGestureHandler.ManipulationWatch">
            <summary>
            Gets or sets the manipulation stopwatch.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.MouseGestureHandler.ModelUpDirection">
            <summary>
            Gets the model up direction.
            </summary>
            <value>The model up direction.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.MouseGestureHandler.MouseDownNearestPoint3D">
            <summary>
            Gets or sets the mouse down point at the nearest hit element (3D world coordinates).
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.MouseGestureHandler.MouseDownPoint">
            <summary>
            Gets or sets the mouse down point (2D screen coordinates).
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.MouseGestureHandler.MouseDownPoint3D">
            <summary>
            Gets or sets the mouse down point (3D world coordinates).
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.MouseGestureHandler.RotationSensitivity">
            <summary>
            Gets the rotation sensitivity.
            </summary>
            <value>The rotation sensitivity.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.MouseGestureHandler.Viewport">
            <summary>
            Gets the viewport.
            </summary>
            <value>The viewport.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.MouseGestureHandler.ZoomSensitivity">
            <summary>
            Gets the zoom sensitivity.
            </summary>
            <value>The zoom sensitivity.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.MouseGestureHandler.OldCursor">
            <summary>
            Gets or sets the old cursor.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.PanHandler">
            <summary>
            Handles panning.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.PanHandler.panPoint3D">
            <summary>
            The 3D pan origin.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.PanHandler.#ctor(HelixToolkit.SharpDX.Wpf.Viewport3DX)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Wpf.PanHandler"/> class.
            </summary>
            <param name="viewport">
            The viewport.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.PanHandler.Delta(HelixToolkit.SharpDX.Wpf.ManipulationEventArgs)">
            <summary>
            Occurs when the position is changed during a manipulation.
            </summary>
            <param name="e">The <see cref="T:HelixToolkit.SharpDX.Wpf.ManipulationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.PanHandler.Pan(System.Windows.Media.Media3D.Vector3D)">
            <summary>
            Pans the camera by the specified 3D vector (world coordinates).
            </summary>
            <param name="delta">
            The panning vector.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.PanHandler.Pan(System.Windows.Vector)">
            <summary>
            Pans the camera by the specified 2D vector (screen coordinates).
            </summary>
            <param name="delta">
            The delta.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.PanHandler.Started(HelixToolkit.SharpDX.Wpf.ManipulationEventArgs)">
            <summary>
            Occurs when the manipulation is started.
            </summary>
            <param name="e">The <see cref="T:HelixToolkit.SharpDX.Wpf.ManipulationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.PanHandler.CanExecute">
            <summary>
            Occurs when the command associated with this handler initiates a check to determine whether the command can be executed on the command target.
            </summary>
            <returns>
            True if the execution can continue.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.PanHandler.GetCursor">
            <summary>
            Gets the cursor for the gesture.
            </summary>
            <returns>
            A cursor.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.PanHandler.OnInertiaStarting(System.Int32)">
            <summary>
            Called when inertia is starting.
            </summary>
            <param name="elapsedTime">
            The elapsed time (milliseconds).
            </param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.RotateHandler">
            <summary>
            Handles rotation.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.RotateHandler.changeLookAt">
            <summary>
            The change look at.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.RotateHandler.rotationAxisX">
            <summary>
            The x rotation axis.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.RotateHandler.rotationAxisY">
            <summary>
            The y rotation axis.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.RotateHandler.rotationPoint">
            <summary>
            The rotation point.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.RotateHandler.rotationPoint3D">
            <summary>
            The 3D rotation point.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.RotateHandler.#ctor(HelixToolkit.SharpDX.Wpf.Viewport3DX,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Wpf.RotateHandler"/> class.
            </summary>
            <param name="controller">
            The controller.
            </param>
            <param name="changeLookAt">
            The change look at.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.RotateHandler.Completed(HelixToolkit.SharpDX.Wpf.ManipulationEventArgs)">
            <summary>
            Occurs when the manipulation is completed.
            </summary>
            <param name="e">The <see cref="T:HelixToolkit.SharpDX.Wpf.ManipulationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.RotateHandler.Delta(HelixToolkit.SharpDX.Wpf.ManipulationEventArgs)">
            <summary>
            Occurs when the position is changed during a manipulation.
            </summary>
            <param name="e">The <see cref="T:HelixToolkit.SharpDX.Wpf.ManipulationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.RotateHandler.LookAt(System.Windows.Media.Media3D.Point3D,System.Double)">
            <summary>
            Change the "look-at" point.
            </summary>
            <param name="target">
            The target.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.RotateHandler.Rotate(System.Windows.Point,System.Windows.Point,System.Windows.Media.Media3D.Point3D)">
            <summary>
            Rotate the camera around the specified point.
            </summary>
            <param name="p0">
            The p 0.
            </param>
            <param name="p1">
            The p 1.
            </param>
            <param name="rotateAround">
            The rotate around.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.RotateHandler.Rotate(System.Windows.Vector)">
            <summary>
            The rotate.
            </summary>
            <param name="delta">
            The delta.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.RotateHandler.RotateTurnball(System.Windows.Point,System.Windows.Point,System.Windows.Media.Media3D.Point3D)">
            <summary>
            Rotate around three axes.
            </summary>
            <param name="p1">
            The previous mouse position.
            </param>
            <param name="p2">
            The current mouse position.
            </param>
            <param name="rotateAround">
            The point to rotate around.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.RotateHandler.RotateTurntable(System.Windows.Vector,System.Windows.Media.Media3D.Point3D)">
            <summary>
            Rotate camera using 'Turntable' rotation.
            </summary>
            <param name="delta">
            The relative change in position.
            </param>
            <param name="rotateAround">
            The point to rotate around.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.RotateHandler.Started(HelixToolkit.SharpDX.Wpf.ManipulationEventArgs)">
            <summary>
            Occurs when the manipulation is started.
            </summary>
            <param name="e">The <see cref="T:HelixToolkit.SharpDX.Wpf.ManipulationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.RotateHandler.CanExecute">
            <summary>
            The can execute.
            </summary>
            <returns>
            True if the execution can continue.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.RotateHandler.GetCursor">
            <summary>
            Gets the cursor.
            </summary>
            <returns>
            A cursor.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.RotateHandler.OnInertiaStarting(System.Int32)">
            <summary>
            Called when inertia is starting.
            </summary>
            <param name="elapsedTime">
            The elapsed time.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.RotateHandler.ProjectToTrackball(System.Windows.Point,System.Double,System.Double)">
            <summary>
            Projects a screen position to the trackball unit sphere.
            </summary>
            <param name="point">
            The screen position.
            </param>
            <param name="w">
            The width of the viewport.
            </param>
            <param name="h">
            The height of the viewport.
            </param>
            <returns>
            A trackball coordinate.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.RotateHandler.InitTurnballRotationAxes(System.Windows.Point)">
            <summary>
            Initializes the 'turn-ball' rotation axes from the specified point.
            </summary>
            <param name="p1">
            The point.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.RotateHandler.RotateTrackball(System.Windows.Point,System.Windows.Point,System.Windows.Media.Media3D.Point3D)">
            <summary>
            The rotate trackball.
            </summary>
            <param name="p1">
            The previous mouse position.
            </param>
            <param name="p2">
            The current mouse position.
            </param>
            <param name="rotateAround">
            The point to rotate around.
            </param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.RotateHandler.CameraRotationMode">
            <summary>
            Gets the camera rotation mode.
            </summary>
            <value>
            The camera rotation mode.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.TouchMode">
            <summary>
            The touch mode.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.TouchMode.None">
            <summary>
            No touch handling mode.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.TouchMode.Panning">
            <summary>
            The panning mode.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.TouchMode.Rotating">
            <summary>
            The rotating mode.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.ZoomHandler">
            <summary>
            Handles zooming.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.ZoomHandler.changeFieldOfView">
            <summary>
            The change field of view.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.ZoomHandler.zoomPoint">
            <summary>
            The zoom point.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.ZoomHandler.zoomPoint3D">
            <summary>
            The 3D zoom point.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ZoomHandler.#ctor(HelixToolkit.SharpDX.Wpf.Viewport3DX,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Wpf.ZoomHandler"/> class.
            </summary>
            <param name="viewport">
            The viewport.
            </param>
            <param name="changeFieldOfView">
            if set to <c>true</c> [change field of view].
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ZoomHandler.Completed(HelixToolkit.SharpDX.Wpf.ManipulationEventArgs)">
            <summary>
            Occurs when the manipulation is completed.
            </summary>
            <param name="e">The <see cref="T:HelixToolkit.SharpDX.Wpf.ManipulationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ZoomHandler.Delta(HelixToolkit.SharpDX.Wpf.ManipulationEventArgs)">
            <summary>
            Occurs when the position is changed during a manipulation.
            </summary>
            <param name="e">The <see cref="T:HelixToolkit.SharpDX.Wpf.ManipulationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ZoomHandler.Started(HelixToolkit.SharpDX.Wpf.ManipulationEventArgs)">
            <summary>
            Occurs when the manipulation is started.
            </summary>
            <param name="e">The <see cref="T:HelixToolkit.SharpDX.Wpf.ManipulationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ZoomHandler.Zoom(System.Double)">
            <summary>
            Zooms the view.
            </summary>
            <param name="delta">
            The delta.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ZoomHandler.Zoom(System.Double,System.Windows.Media.Media3D.Point3D)">
            <summary>
            Zooms the view around the specified point.
            </summary>
            <param name="delta">
            The delta.
            </param>
            <param name="zoomAround">
            The zoom around.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ZoomHandler.ZoomByChangingCameraWidth(System.Double,System.Windows.Media.Media3D.Point3D)">
            <summary>
            The change camera width.
            </summary>
            <param name="delta">
            The delta.
            </param>
            <param name="zoomAround">
            The zoom around.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ZoomHandler.CanExecute">
            <summary>
            Occurs when the command associated with this handler initiates a check to determine whether the command can be executed on the command target.
            </summary>
            <returns>
            True if the execution can continue.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ZoomHandler.GetCursor">
            <summary>
            Gets the cursor for the gesture.
            </summary>
            <returns>
            A cursor.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ZoomHandler.ChangeCameraDistance(System.Double,System.Windows.Media.Media3D.Point3D)">
            <summary>
            Changes the camera distance.
            </summary>
            <param name="delta">The delta.</param>
            <param name="zoomAround">The zoom around point.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.ZoomRectangleHandler">
            <summary>
            Handles rectangle zooming.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.ZoomRectangleHandler.zoomRectangle">
            <summary>
            The zoom rectangle.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ZoomRectangleHandler.#ctor(HelixToolkit.SharpDX.Wpf.Viewport3DX)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Wpf.ZoomRectangleHandler"/> class.
            </summary>
            <param name="viewport">
            The viewport.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ZoomRectangleHandler.Completed(HelixToolkit.SharpDX.Wpf.ManipulationEventArgs)">
            <summary>
            Occurs when the manipulation is completed.
            </summary>
            <param name="e">The <see cref="T:HelixToolkit.SharpDX.Wpf.ManipulationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ZoomRectangleHandler.Delta(HelixToolkit.SharpDX.Wpf.ManipulationEventArgs)">
            <summary>
            Occurs when the position is changed during a manipulation.
            </summary>
            <param name="e">The <see cref="T:HelixToolkit.SharpDX.Wpf.ManipulationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ZoomRectangleHandler.Started(HelixToolkit.SharpDX.Wpf.ManipulationEventArgs)">
            <summary>
            Occurs when the manipulation is started.
            </summary>
            <param name="e">The <see cref="T:HelixToolkit.SharpDX.Wpf.ManipulationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ZoomRectangleHandler.ZoomRectangle(System.Windows.Rect)">
            <summary>
            Zooms to the specified rectangle.
            </summary>
            <param name="rectangle">
            The zoom rectangle.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ZoomRectangleHandler.CanExecute">
            <summary>
            Occurs when the command associated with this handler initiates a check to determine whether the command can be executed on the command target.
            </summary>
            <returns>True if the execution can continue.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ZoomRectangleHandler.GetCursor">
            <summary>
            Gets the cursor for the gesture.
            </summary>
            <returns>A cursor.</returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.RenderContext">
            <summary>
            The render-context is currently generated per frame
            Optimizations might be possible
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.RenderUtil.CreateBuffer``1(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.BindFlags,System.Int32,``0[])">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.ViewportExtensions">
            <summary>
            Provides extension methods for <see cref="T:HelixToolkit.SharpDX.Wpf.Viewport3DX"/>.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ViewportExtensions.GetTotalNumberOfTriangles(HelixToolkit.SharpDX.Wpf.Viewport3DX)">
            <summary>
            Gets the total number of triangles in the viewport.
            </summary>
            <param name="viewport">The viewport.</param>
            <returns>The total number of triangles</returns>        
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ViewportExtensions.Copy(HelixToolkit.SharpDX.Wpf.Viewport3DX,System.Int32)">
            <summary>
            Copies the specified viewport to the clipboard.
            </summary>
            <param name="view">The viewport.</param>
            <param name="m">The oversampling multiplier.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ViewportExtensions.Copy(HelixToolkit.SharpDX.Wpf.Viewport3DX,System.Double,System.Double,System.Windows.Media.Brush,System.Int32)">
            <summary>
            Copies the specified viewport to the clipboard.
            </summary>
            <param name="view">The view.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="background">The background.</param>
            <param name="m">The oversampling multiplier.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ViewportExtensions.GetViewProjectionMatrix3D(HelixToolkit.SharpDX.Wpf.Viewport3DX)">
            <summary>
            Gets the camera transform.
            </summary>
            <param name="viewport">
            The viewport.
            </param>
            <returns>
            The camera transform.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ViewportExtensions.GetViewProjectionMatrix(HelixToolkit.SharpDX.Wpf.Viewport3DX)">
            <summary>
            Gets the camera transform.
            </summary>
            <param name="viewport">
            The viewport.
            </param>
            <returns>
            The camera transform.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ViewportExtensions.GetScreenViewProjectionMatrix3D(HelixToolkit.SharpDX.Wpf.Viewport3DX)">
            <summary>
            Gets the total transform for a Viewport3DX. 
            Old name of this function: GetTotalTransform
            New name of the function: GetScreenViewProjectionTransform
            </summary>
            <param name="viewport">The viewport.</param>
            <returns>The total transform.</returns>        
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ViewportExtensions.GetScreenViewProjectionMatrix(HelixToolkit.SharpDX.Wpf.Viewport3DX)">
            <summary>
            Gets the total transform for a Viewport3DX. 
            Old name of this function: GetTotalTransform
            New name of the function: GetScreenViewProjectionTransform
            </summary>
            <param name="viewport">The viewport.</param>
            <returns>The total transform.</returns>        
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ViewportExtensions.GetViewportMatrix3D(HelixToolkit.SharpDX.Wpf.Viewport3DX)">
            <summary>
            Gets the viewport transform aka the screen-space transform.
            </summary>
            <param name="viewport">
            The viewport.
            </param>
            <returns>The transform.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ViewportExtensions.GetViewportMatrix(HelixToolkit.SharpDX.Wpf.Viewport3DX)">
            <summary>
            Gets the viewport transform aka the screen-space transform.
            </summary>
            <param name="viewport">
            The viewport.
            </param>
            <returns>The transform.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ViewportExtensions.FindBounds(HelixToolkit.SharpDX.Wpf.Viewport3DX)">
            <summary>
            Finds the bounding box of the viewport.
            </summary>
            <param name="viewport">The viewport.</param>
            <returns>The bounding box.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ViewportExtensions.FindHits(HelixToolkit.SharpDX.Wpf.Viewport3DX,System.Windows.Point)">
            <summary>
            Finds the hits for a given 2D viewport position.
            </summary>
            <param name="viewport">
            The viewport.
            </param>
            <param name="position">
            The position.
            </param>
            <returns>
            List of hits, sorted with the nearest hit first.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ViewportExtensions.FindNearest(HelixToolkit.SharpDX.Wpf.Viewport3DX,System.Windows.Point,System.Windows.Media.Media3D.Point3D@,System.Windows.Media.Media3D.Vector3D@,HelixToolkit.SharpDX.Wpf.Model3D@)">
            <summary>
            Finds the nearest point and its normal.
            </summary>
            <param name="viewport">
            The viewport.
            </param>
            <param name="position">
            The position.
            </param>
            <param name="point">
            The point.
            </param>
            <param name="normal">
            The normal.
            </param>
            <param name="visual">
            The visual.
            </param>
            <returns>
            The find nearest.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ViewportExtensions.FindNearestPoint(HelixToolkit.SharpDX.Wpf.Viewport3DX,System.Windows.Point)">
            <summary>
            Find the coordinates of the nearest point given a 2D position in the viewport
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="position">The position.</param>
            <returns>The nearest point, or null if no point was found.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ViewportExtensions.UnProject(HelixToolkit.SharpDX.Wpf.Viewport3DX,SharpDX.Vector2)">
            <summary>
            Un-projects a 2D screen point.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="pointIn">The input point.</param>
            <param name="pointNear">The point at the near clipping plane.</param>
            <param name="pointFar">The point at the far clipping plane.</param>
            <returns>The ray.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ViewportExtensions.UnProject(HelixToolkit.SharpDX.Wpf.Viewport3DX,System.Windows.Point)">
            <summary>
            Un-projects a 2D screen point.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="pointIn">The input point.</param>
            <returns>The ray.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ViewportExtensions.UnProjectToRay(HelixToolkit.SharpDX.Wpf.Viewport3DX,System.Windows.Point)">
            <summary>
            Un-projects the specified 2D screen point to a ray.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="point2d">The point.</param>
            <returns>The ray.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ViewportExtensions.UnProjectOnPlane(HelixToolkit.SharpDX.Wpf.Viewport3DX,System.Windows.Point,System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Vector3D)">
            <summary>
            Un-project a point from the screen (2D) to a point on plane (3D)
            </summary>
            <param name="viewport">
            The viewport.
            </param>
            <param name="p">
            The 2D point.
            </param>
            <param name="position">
            plane position
            </param>
            <param name="normal">
            plane normal
            </param>
            <returns>
            A 3D point.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ViewportExtensions.UnProjectOnPlane(HelixToolkit.SharpDX.Wpf.Viewport3DX,System.Windows.Point)">
            <summary>
            Un-projects a point from the screen (2D) to a point on the plane trough the camera target point.
            </summary>
            <param name="viewport">
            The viewport.
            </param>
            <param name="p">
            The 2D point.
            </param>
            <returns>
            A 3D point.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ViewportExtensions.Project(HelixToolkit.SharpDX.Wpf.Viewport3DX,System.Windows.Media.Media3D.Point3D)">
            <summary>
            Projects the specified 3D point to a 2D screen point.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="point">The 3D point.</param>
            <returns>The point.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ViewportExtensions.Print(HelixToolkit.SharpDX.Wpf.Viewport3DX,System.String)">
            <summary>
            Prints the specified viewport.
            </summary>
            <param name="vp">
            The viewport.
            </param>
            <param name="description">
            The description.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ViewportExtensions.RenderBitmap(HelixToolkit.SharpDX.Wpf.Viewport3DX,System.Windows.Media.Brush,System.Int32)">
            <summary>
            Renders the viewport to a bitmap.
            </summary>
            <param name="view">The viewport.</param>
            <param name="background">The background.</param>
            <param name="m">The oversampling multiplier.</param>
            <returns>A bitmap.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ViewportExtensions.RenderBitmap(HelixToolkit.SharpDX.Wpf.Viewport3DX,System.Double,System.Double,System.Windows.Media.Brush,System.Int32)">
            <summary>
            Renders the viewport to a bitmap.
            </summary>
            <param name="view">The viewport.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="background">The background.</param>
            <param name="m">The oversampling multiplier.</param>
            <returns>A bitmap.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ViewportExtensions.ResizeAndArrange(HelixToolkit.SharpDX.Wpf.Viewport3DX,System.Double,System.Double)">
            <summary>
            Resizes and arranges the viewport.
            </summary>
            <param name="view">
            The view.
            </param>
            <param name="width">
            The width.
            </param>
            <param name="height">
            The height.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ViewportExtensions.SaveBitmap(HelixToolkit.SharpDX.Wpf.Viewport3DX,System.String,System.Windows.Media.Brush,System.Int32)">
            <summary>
            Saves the viewport to a file.
            </summary>
            <param name="view">The view.</param>
            <param name="fileName">Name of the file.</param>
            <param name="background">The background brush.</param>
            <param name="m">The oversampling multiplier.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ViewportExtensions.ZoomExtents(HelixToolkit.SharpDX.Wpf.Viewport3DX,System.Double)">
            <summary>
            Zooms to the extents of the specified viewport.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="animationTime">The animation time.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ViewportExtensions.ZoomExtents(HelixToolkit.SharpDX.Wpf.Viewport3DX,System.Windows.Media.Media3D.Rect3D,System.Double)">
            <summary>
            Zooms to the extents of the specified bounding box.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="bounds">The bounding rectangle.</param>
            <param name="animationTime">The animation time.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ViewportExtensions.ZoomExtents(HelixToolkit.SharpDX.Wpf.Viewport3DX,System.Windows.Media.Media3D.Point3D,System.Double,System.Double)">
            <summary>
            Zooms to the extents of the specified bounding sphere.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="center">The center of the sphere.</param>
            <param name="radius">The radius of the sphere.</param>
            <param name="animationTime">The animation time.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ViewportExtensions.ZoomToRectangle(HelixToolkit.SharpDX.Wpf.Viewport3DX,System.Windows.Rect)">
            <summary>
            Zooms the viewport to the specified rectangle.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ViewportExtensions.ZoomByChangingFieldOfView(HelixToolkit.SharpDX.Wpf.Viewport3DX,System.Double)">
            <summary>
            Changes the field of view and tries to keep the scale fixed.
            </summary>
            <param name="delta">
            The relative change in fov.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ViewportExtensions.CopyBitmap(System.Windows.Media.Imaging.BitmapSource,System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32)">
            <summary>
            Copies the source bitmap to the specified position in the target bitmap.
            </summary>
            <param name="source">The source bitmap.</param>
            <param name="target">The target bitmap.</param>
            <param name="offsetx">The x offset.</param>
            <param name="offsety">The y offset.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Matrix3DExtensions.AddMatrix(System.Windows.Media.Media3D.Matrix3D,System.Windows.Media.Media3D.Matrix3D)">
            <summary>
            
            </summary>
            <param name="m1"></param>
            <param name="m2"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Matrix3DExtensions.MultiplyMatrix(System.Windows.Media.Media3D.Matrix3D,System.Double)">
            <summary>
            
            </summary>
            <param name="scalar"></param>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Matrix3DExtensions.Similarity2D(System.Collections.Generic.IList{System.Windows.Media.Media3D.Point3D},System.Collections.Generic.IList{System.Windows.Media.Media3D.Point3D})">
            <summary>
            Computes an optimal similarity transform for two points sets.
            This function assums that the translational component has been already removed, i.e. 
            that both point sets have the same centriod. 
            </summary>
            <param name="w">weight: importance of each point </param>
            <param name="p">original points</param>
            <param name="q">transformed points</param>
            <returns>A similarity transform T: p = Tq</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Matrix3DExtensions.Rigid2D(System.Collections.Generic.IList{System.Windows.Media.Media3D.Point3D},System.Collections.Generic.IList{System.Windows.Media.Media3D.Point3D})">
            <summary>
            Computes an optimal rigid transform for two points sets.
            This function assums that the translational component has been already removed, i.e. 
            that both point sets have the same centriod. 
            </summary>
            <param name="w">weight: importance of each point </param>
            <param name="p">original points</param>
            <param name="q">transformed points</param>
            <returns>A rigid transform T: p = Tq</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Matrix3DExtensions.Rigid2D(System.Collections.Generic.IList{System.Windows.Media.Media3D.Vector3D},System.Collections.Generic.IList{System.Windows.Media.Media3D.Vector3D})">
            <summary>
            Computes an optimal rigid transform for two points sets.
            This function assums that the translational component has been already removed, i.e. 
            that both point sets have the same centriod. 
            </summary>
            <param name="w">weight: importance of each point </param>
            <param name="p">original points</param>
            <param name="q">transformed points</param>
            <returns>A rigid transform T: p = Tq</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Matrix3DExtensions.Similarity2D(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Windows.Media.Media3D.Point3D},System.Collections.Generic.IList{System.Windows.Media.Media3D.Point3D})">
            <summary>
            Computes an optimal similarity transform for two points sets.
            This function assums that the translational component has been already removed, i.e. 
            that both point sets have the same centriod. 
            </summary>
            <param name="w">weight: importance of each point </param>
            <param name="p">original points</param>
            <param name="q">transformed points</param>
            <returns>A similarity transform T: p = Tq</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Matrix3DExtensions.Rigid2D(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Windows.Media.Media3D.Point3D},System.Collections.Generic.IList{System.Windows.Media.Media3D.Point3D})">
            <summary>
            Computes an optimal rigid local rotation for two points sets.
            This function assums that the translational component has been already removed, i.e. 
            that both point sets have the same centriod. 
            </summary>
            <param name="w">weight: importance of each point </param>
            <param name="p">original points</param>
            <param name="q">transformed points</param>
            <returns>A rigid transform T: p = Tq</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Matrix3DExtensions.Affine2D(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Windows.Media.Media3D.Point3D},System.Collections.Generic.IList{System.Windows.Media.Media3D.Point3D})">
            <summary>
            Computes an optimal affine transform for two points sets.
            This function assums that the translational component has been already removed, i.e. 
            that both point sets have the same centriod. 
            </summary>
            <param name="w">weight: importance of each point </param>
            <param name="p">original points</param>
            <param name="q">transformed points</param>
            <returns>A affine transform T: p = Tq</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Matrix3DExtensions.AnisotropicSimilarityX2D(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D)">
            <summary>
            Computes an ansiotropic similarty for an object, which is only scaled along the X-axis, 
            but maintains its Y-scale constantly.
            </summary>                    
            <param name="p">original points</param>
            <param name="q">transformed points</param>
            <returns>A ansiotropic similarty transform T: p = Tq</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Matrix3DExtensions.AnisotropicSimilarityY2D(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D)">
            <summary>
            Computes an ansiotropic similarty for an object, which is only scaled along the Y-axis, 
            but maintains its X-scale constantly.
            </summary>                    
            <param name="p">original points</param>
            <param name="q">transformed points</param>
            <returns>A ansiotropic similarty transform T: p = Tq</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Matrix3DExtensions.OuterProduct(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D)">
            <summary>
            
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.VectorExtensions.FindAnyPerpendicular(SharpDX.Vector3)">
            <summary>
            Find a <see cref="T:System.Windows.Media.Media3D.Vector3D"/> that is perpendicular to the given <see cref="T:System.Windows.Media.Media3D.Vector3D"/>.
            </summary>
            <param name="n">
            The input vector.
            </param>
            <returns>
            A perpendicular vector.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.VectorExtensions.IsUndefined(SharpDX.Vector3)">
            <summary>
            Determines whether the specified vector is undefined (NaN,NaN,NaN).
            </summary>
            <param name="v">The vector.</param>
            <returns>
            <c>true</c> if the specified vector is undefined; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.VectorComparisonExtensions.AllSmallerOrEqual(SharpDX.Vector2,SharpDX.Vector2)">
            <summary>
            Returns whether ALL elements of this are SmallerOrEqual the corresponding element of v.
            ATTENTION: For example (a.AllSmaller(b)) is not the same as !(a.AllGreaterOrEqual(b)) but !(a.AnyGreaterOrEqual(b)).
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.VectorComparisonExtensions.AllSmallerOrEqual(SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Returns whether ALL elements of this are SmallerOrEqual the corresponding element of v.
            ATTENTION: For example (a.AllSmaller(b)) is not the same as !(a.AllGreaterOrEqual(b)) but !(a.AnyGreaterOrEqual(b)).
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.VectorComparisonExtensions.AllSmallerOrEqual(SharpDX.Vector3,System.Single)">
            <summary>
            Returns whether ALL elements of v are SmallerOrEqual s.
            ATTENTION: For example (AllSmaller(a,b)) is not the same as !(AllGreaterOrEqual(a,b)) but !(AnyGreaterOrEqual(a,b)).
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.VectorComparisonExtensions.AllSmaller(SharpDX.Vector2,SharpDX.Vector2)">
            <summary>
            Returns whether ALL elements of this are SmallerOrEqual the corresponding element of v.
            ATTENTION: For example (a.AllSmaller(b)) is not the same as !(a.AllGreaterOrEqual(b)) but !(a.AnyGreaterOrEqual(b)).
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.VectorComparisonExtensions.AllSmaller(SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Returns whether ALL elements of this are SmallerOrEqual the corresponding element of v.
            ATTENTION: For example (a.AllSmaller(b)) is not the same as !(a.AllGreaterOrEqual(b)) but !(a.AnyGreaterOrEqual(b)).
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.VectorComparisonExtensions.AllSmaller(SharpDX.Vector3,System.Single)">
            <summary>
            Returns whether ALL elements of v are SmallerOrEqual s.
            ATTENTION: For example (AllSmaller(a,b)) is not the same as !(AllGreaterOrEqual(a,b)) but !(AnyGreaterOrEqual(a,b)).
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.VectorComparisonExtensions.AnySmallerOrEqual(SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Returns whether AT LEAST ONE element of a is SmallerOrEqual the corresponding element of b.
            ATTENTION: For example (AllSmaller(a,b)) is not the same as !(AllGreaterOrEqual(a,b)) but !(AnyGreaterOrEqual(a,b)).
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.VectorComparisonExtensions.AnySmallerOrEqual(SharpDX.Vector3,System.Single)">
            <summary>
            Returns whether AT LEAST ONE element of v is SmallerOrEqual s.
            ATTENTION: For example (AllSmaller(a,b)) is not the same as !(AllGreaterOrEqual(a,b)) but !(AnyGreaterOrEqual(a,b)).
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.VectorComparisonExtensions.AllGreaterOrEqual(SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Returns whether ALL elements of a are GreaterOrEqual the corresponding element of b.
            ATTENTION: For example (AllSmaller(a,b)) is not the same as !(AllGreaterOrEqual(a,b)) but !(AnyGreaterOrEqual(a,b)).
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.VectorComparisonExtensions.AllGreaterOrEqual(SharpDX.Vector3,System.Single)">
            <summary>
            Returns whether ALL elements of v are GreaterOrEqual s.
            ATTENTION: For example (AllSmaller(a,b)) is not the same as !(AllGreaterOrEqual(a,b)) but !(AnyGreaterOrEqual(a,b)).
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.VectorComparisonExtensions.AnyGreaterOrEqual(SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Returns whether AT LEAST ONE element of a is GreaterOrEqual the corresponding element of b.
            ATTENTION: For example (AllSmaller(a,b)) is not the same as !(AllGreaterOrEqual(a,b)) but !(AnyGreaterOrEqual(a,b)).
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.VectorComparisonExtensions.AnyGreaterOrEqual(SharpDX.Vector3,System.Single)">
            <summary>
            Returns whether AT LEAST ONE element of v is GreaterOrEqual s.
            ATTENTION: For example (AllSmaller(a,b)) is not the same as !(AllGreaterOrEqual(a,b)) but !(AnyGreaterOrEqual(a,b)).
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.VectorComparisonExtensions.ComponentMin(SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Component-wise min vec
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.VectorComparisonExtensions.ComponentMax(SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Component-wise max vec
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.StringExtensions">
            <summary>
            Extension methods for strings.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.StringExtensions.oneOrMoreWhitespaces">
            <summary>
            A regular expression containing "a one or more whitespaces" pattern.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.StringExtensions.SplitOnWhitespace(System.String)">
            <summary>
            Splits the string on whitespace.
            </summary>
            <param name="input">The input string.</param>
            <returns>Array of strings.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.StringExtensions.EnumerateToString(System.Collections.IEnumerable,System.String,System.String)">
            <summary>
            Creates a string from the items in an enumerable.
            </summary>
            <param name="items">The items.</param>
            <param name="prefix">The prefix.</param>
            <param name="separator">The separator.</param>
            <returns>
            A string.
            </returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Camera">
            <summary>
            Specifies what portion of the 3D scene is rendered by the Viewport3DX element.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Camera.CreateViewMatrix">
            <summary>
            Creates the view matrix.
            </summary>
            <returns>A <see cref="T:SharpDX.Matrix"/>.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Camera.CreateProjectionMatrix(System.Double)">
            <summary>
            Creates the projection matrix.
            </summary>
            <param name="aspectRatio">The aspect ratio.</param>
            <returns>A <see cref="T:SharpDX.Matrix"/>.</returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.Camera.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Camera.LookDirection">
            <summary>
            Gets or sets the look direction.
            </summary>
            <value>
            The look direction.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Camera.UpDirection">
            <summary>
            Gets or sets up direction.
            </summary>
            <value>
            Up direction.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.MatrixCamera">
            <summary>
            Camera which specifies the view and projection transforms as Matrix3D objects
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.MatrixCamera.ProjectionMatrixProperty">
            <summary>
            The projection matrix property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.MatrixCamera.ViewMatrixProperty">
            <summary>
            The view matrix property
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.MatrixCamera.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.MatrixCamera"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.MatrixCamera.#ctor(System.Windows.Media.Media3D.Matrix3D,System.Windows.Media.Media3D.Matrix3D)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.MatrixCamera"/> class.
            </summary>
            <param name="viewMatrix">
            The view matrix.
            </param>
            <param name="projectionMatrix">
            The projection matrix.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.MatrixCamera.CreateProjectionMatrix(System.Double)">
            <summary>
            Creates the projection matrix.
            </summary>
            <param name="aspectRatio">
            The aspect ratio.
            </param>
            <returns>
            A <see cref="T:SharpDX.Matrix"/>.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.MatrixCamera.CreateViewMatrix">
            <summary>
            Creates the view matrix.
            </summary>
            <returns>
            A <see cref="T:SharpDX.Matrix"/>.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.MatrixCamera.CreateInstanceCore">
            <summary>
            When implemented in a derived class, creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class.
            </summary>
            <returns>
            The new instance.
            </returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.MatrixCamera.ProjectionMatrix">
            <summary>
            Gets or sets the projection matrix.
            </summary>
            <value>
            The projection matrix.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.MatrixCamera.ViewMatrix">
            <summary>
            Gets or sets the view matrix.
            </summary>
            <value>
            The view matrix.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.OrthographicCamera">
            <summary>
            Represents an orthographic projection camera.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.ProjectionCamera">
            <summary>
            An abstract base class for perspective and orthographic projection cameras.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.ProjectionCamera.CreateLeftHandSystemProperty">
            <summary>
            The create left hand system property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.ProjectionCamera.FarPlaneDistanceProperty">
            <summary>
            The far plane distance property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.ProjectionCamera.LookDirectionProperty">
            <summary>
            The look direction property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.ProjectionCamera.NearPlaneDistanceProperty">
            <summary>
            The near plane distance property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.ProjectionCamera.PositionProperty">
            <summary>
            The position property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.ProjectionCamera.UpDirectionProperty">
            <summary>
            Up direction property
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.ProjectionCamera.CreateViewMatrix">
            <summary>
            Creates the view matrix.
            </summary>
            <returns>
            A Matrix.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.ProjectionCamera.CameraChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles camera changes.
            </summary>
            <param name="obj">
            The sender.
            </param>
            <param name="args">
            The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.ProjectionCamera.CameraChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            The camera changed.
            </summary>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:HelixToolkit.SharpDX.ProjectionCamera.CreateLeftHandSystem">
            <summary>
            Gets or sets a value indicating whether to create a left hand system.
            </summary>
            <value>
            <c>true</c> if creating a left hand system; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.ProjectionCamera.FarPlaneDistance">
            <summary>
            Gets or sets the far plane distance.
            </summary>
            <value>
            The far plane distance.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.ProjectionCamera.LookDirection">
            <summary>
            Gets or sets the look direction.
            </summary>
            <value>
            The look direction.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.ProjectionCamera.NearPlaneDistance">
            <summary>
            Gets or sets the near plane distance.
            </summary>
            <value>
            The near plane distance.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.ProjectionCamera.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.ProjectionCamera.Target">
            <summary>
            Gets the target position.
            </summary>
            <value>
            The target.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.ProjectionCamera.UpDirection">
            <summary>
            Gets or sets up direction.
            </summary>
            <value>
            Up direction.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.OrthographicCamera.WidthProperty">
            <summary>
            The width property
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.OrthographicCamera.CreateProjectionMatrix(System.Double)">
            <summary>
            Creates the projection matrix.
            </summary>
            <param name="aspectRatio">
            The aspect ratio.
            </param>
            <returns>
            A <see cref="T:SharpDX.Matrix"/>.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.OrthographicCamera.CreateInstanceCore">
            <summary>
            When implemented in a derived class, creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class.
            </summary>
            <returns>
            The new instance.
            </returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.OrthographicCamera.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.PerspectiveCamera">
            <summary>
            Represents a perspective projection camera.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.PerspectiveCamera.FieldOfViewProperty">
            <summary>
            The field of view property
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.PerspectiveCamera.CreateProjectionMatrix(System.Double)">
            <summary>
            Creates the projection matrix.
            </summary>
            <param name="aspectRatio">
            The aspect ratio.
            </param>
            <returns>
            The <see cref="T:SharpDX.Matrix"/>.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.PerspectiveCamera.CreateFrustum(System.Double)">
            <summary>
            Generates and returns the view frustum of the current camera.
            </summary>
            <returns>Frustum as Vector4</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.PerspectiveCamera.CreateInstanceCore">
            <summary>
            When implemented in a derived class, creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class.
            </summary>
            <returns>
            The new instance.
            </returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.PerspectiveCamera.FieldOfView">
            <summary>
            Gets or sets the field of view.
            </summary>
            <value>
            The field of view.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.CompositeModel3D">
            <summary>
                Represents a composite Model3D.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.GeometryModel3D">
            <summary>
            Provides a base class for a scene model which contains geometry
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.Model3D">
            <summary>
            Provides a base class for a scene model
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.Element3D">
            <summary>
            Base class for renderable elements.
            </summary>    
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Element3D.Attach(HelixToolkit.SharpDX.IRenderHost)">
            <summary>
            Attaches the element to the specified host.
            </summary>
            <param name="host">The host.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Element3D.Detach">
            <summary>
            Detaches the element from the host.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Element3D.Update(System.TimeSpan)">
            <summary>
            Updates the element by the specified time span.
            </summary>
            <param name="timeSpan">The time since last update.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Element3D.Render(HelixToolkit.SharpDX.Wpf.RenderContext)">
            <summary>
            Renders the element in the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Element3D.Dispose">
            <summary>
            Disposes the Element3D. Frees all DX resources.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Element3D.IsRenderingProperty">
            <summary>
            Indicates, if this element should be rendered,
            default is true
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Element3D.IsRendering">
            <summary>
            Indicates, if this element should be rendered.
            Use this also to make the model visible/unvisible
            default is true
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Element3D.IsAttached">
            <summary>
            Returns if this elemet is attached to to the
            rendering  pipeline
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Model3D.totalModelMatrix">
            <summary>
            This is a hack model matrix. It is always pushed but
            never poped. It can be used to get the total model matrix
            in functions different than render or hittext, e.g., OnMouse3DMove.
            This is a temporar solution, until we have more time to think how to make it better.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.IHitable.IsHitTestVisible">
            <summary>
            Indicates, if this element should be hit-tested.        
            default is true
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.GeometryModel3D.HitTest(SharpDX.Ray,System.Collections.Generic.List{HelixToolkit.SharpDX.Wpf.HitTestResult}@)">
            <summary>
            Checks if the ray hits the geometry of the model.
            If there a more than one hit, result returns the hit which is nearest to the ray origin.
            </summary>
            <param name="rayWS">Hitring ray from the camera.</param>
            <param name="result">results of the hit.</param>
            <returns>True if the ray hits one or more times.</returns>
        </member>
        <member name="E:HelixToolkit.SharpDX.Wpf.GeometryModel3D.MouseDown3D">
            <summary>
            Provide CLR accessors for the event 
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Wpf.GeometryModel3D.MouseUp3D">
            <summary>
            Provide CLR accessors for the event 
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Wpf.GeometryModel3D.MouseMove3D">
            <summary>
            Provide CLR accessors for the event 
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CompositeModel3D.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Wpf.CompositeModel3D"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CompositeModel3D.Attach(HelixToolkit.SharpDX.IRenderHost)">
            <summary>
            Attaches the specified host.
            </summary>
            <param name="host">
            The host.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CompositeModel3D.Detach">
            <summary>
                Detaches this instance.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CompositeModel3D.HitTest(SharpDX.Ray,System.Collections.Generic.List{HelixToolkit.SharpDX.Wpf.HitTestResult}@)">
            <summary>
            Compute hit-testing for all children
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CompositeModel3D.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CompositeModel3D.Render(HelixToolkit.SharpDX.Wpf.RenderContext)">
            <summary>
            Renders the specified context.
            </summary>
            <param name="context">
            The context.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CompositeModel3D.ChildrenChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles changes in the Children collection.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance containing the event data.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.CompositeModel3D.UpdateBounds">
            <summary>
            a Model3D does not have bounds, 
            if you want to have a model with bounds, use GeometryModel3D instead:
            but this prevents the CompositeModel3D containg lights, etc. (Lights3D are Models3D, which do not have bounds)
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.CompositeModel3D.Children">
            <summary>
                Gets the children.
            </summary>
            <value>
                The children.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.DraggableGeometryModel3D">
            <summary>
            Example class how to implement mouse dragging for objects.
            Probably it should be moved to a "Dragging Demo."
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.MaterialGeometryModel3D.RenderDiffuseMapProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.MaterialGeometryModel3D.RenderNormalMapProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.MaterialGeometryModel3D.RenderDisplacementMapProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.MaterialGeometryModel3D.MaterialProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MaterialGeometryModel3D.MaterialChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.MaterialGeometryModel3D.InstancesProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.MaterialGeometryModel3D.TextureCoodScaleProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MaterialGeometryModel3D.InstancesChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MaterialGeometryModel3D.OnGeometryChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MaterialGeometryModel3D.AttachMaterial">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MaterialGeometryModel3D.HitTest(SharpDX.Ray,System.Collections.Generic.List{HelixToolkit.SharpDX.Wpf.HitTestResult}@)">
            <summary>
            
            </summary>        
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MaterialGeometryModel3D.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MaterialGeometryModel3D.Detach">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.MaterialGeometryModel3D.RenderDiffuseMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.MaterialGeometryModel3D.RenderNormalMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.MaterialGeometryModel3D.RenderDisplacementMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.MaterialGeometryModel3D.Material">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.MaterialGeometryModel3D.Instances">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.MaterialGeometryModel3D.TextureCoodScale">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshGeometryModel3D.OnRasterStateChanged(System.Int32)">
            <summary>
            
            </summary>
            <param name="depthBias"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshGeometryModel3D.Attach(HelixToolkit.SharpDX.IRenderHost)">
            <summary>
            
            </summary>
            <param name="host"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshGeometryModel3D.Detach">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshGeometryModel3D.Render(HelixToolkit.SharpDX.Wpf.RenderContext)">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshGeometryModel3D.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.EnvironmentMap3D.FilenameProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.EnvironmentMap3D.IsActiveProperty">
            <summary>
            Indicates, if this element is active, if not, the model will be not 
            rendered and not reflected.
            default is true.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.EnvironmentMap3D.Filename">
            <summary>
            Gets or sets the current environment map texture image
            (expects DDS Environment Map image)
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.EnvironmentMap3D.IsActive">
            <summary>
            Indicates, if this element is active, if not, the model will be not 
            rendered and not reflected.
            default is true.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.Items3DControl">
            <summary>
            Represents a items control for Elements3D
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Items3DControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Wpf.CompositeModel3D"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Items3DControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles changes in the Children collection.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance containing the event data.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Items3DControl.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Items3DControl.Attach(HelixToolkit.SharpDX.IRenderHost)">
            <summary>
            Attaches the specified host.
            </summary>
            <param name="host">
            The host.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Items3DControl.Detach">
            <summary>
                Detaches this instance.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Items3DControl.Update(System.TimeSpan)">
            <summary>
            
            </summary>        
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Items3DControl.HitTest(SharpDX.Ray,System.Collections.Generic.List{HelixToolkit.SharpDX.Wpf.HitTestResult}@)">
            <summary>
            Compute hit-testing for all children
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Items3DControl.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Items3DControl.Render(HelixToolkit.SharpDX.Wpf.RenderContext)">
            <summary>
            Renders the specified context.
            </summary>
            <param name="context">
            The context.
            </param>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Items3DControl.renderHost">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.Items3DControl.children">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Items3DControl.IsAttached">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.ItemsModel3D">
            <summary>
                Represents a model that can be used to present a collection of items. supports generating child items by a
                <see cref="T:System.Windows.DataTemplate"/>.
            </summary>
            <remarks>
                Use the ItemsSource property to specify the collection to use to generate the content of your ItemsControl. You can set the ItemsSource
                property to any type that implements IEnumerable. ItemsSource is typically used to display a data collection or to bind an
                ItemsControl to a collection object.
            </remarks>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.ItemsModel3D.ItemTemplateProperty">
            <summary>
                The item template property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.ItemsModel3D.ItemsSourceProperty">
            <summary>
                The items source property
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ItemsModel3D.ItemsSourceChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes in the ItemsSource property.
            </summary>
            <param name="e">
            The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.
            </param>
            <exception cref="T:System.InvalidOperationException">
            Cannot create a Model3D from ItemTemplate.
            </exception>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.ItemsModel3D.ItemTemplate">
            <summary>
                Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used to display each item.
            </summary>
            <value>
                The item template.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.ItemsModel3D.ItemsSource">
            <summary>
                Gets or sets a collection used to generate the content of the <see cref="T:HelixToolkit.SharpDX.Wpf.ItemsModel3D"/>.
            </summary>
            <value>
                The items source.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.Element3DCollection">
            <summary>
            Provides a collection of Element3D.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.ObservableElement3DCollection">
            <summary>
            Provides an observable collection of Element3D.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.PNTechniques.shadingPasses">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.PNTechniques.ShadingTechniques">
            <summary>
            Techniqes available for this Model3D
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.PNTechniques.ShadingPasses">
            <summary>
            Passes available for this Model3D
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.PNPatchGeometryModel3D.ShadingProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.PNPatchGeometryModel3D.ShadingChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.PNPatchGeometryModel3D.TessellationFactorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.PNPatchGeometryModel3D.TessellationFactorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.PNPatchGeometryModel3D.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.PNPatchGeometryModel3D.Attach(HelixToolkit.SharpDX.IRenderHost)">
            <summary>
            
            </summary>
            <param name="host"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.PNPatchGeometryModel3D.Detach">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.PNPatchGeometryModel3D.Update(System.TimeSpan)">
            <summary>
            
            </summary>        
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.PNPatchGeometryModel3D.Render(HelixToolkit.SharpDX.Wpf.RenderContext)">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.PNPatchGeometryModel3D.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.PNPatchGeometryModel3D.Shading">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.PNPatchGeometryModel3D.TessellationFactor">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.UICompositeManipulator3D.CanRotateXProperty">
            <summary>
            The can rotate x property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.UICompositeManipulator3D.CanRotateYProperty">
            <summary>
            The can rotate y property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.UICompositeManipulator3D.CanRotateZProperty">
            <summary>
            The can rotate z property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.UICompositeManipulator3D.CanTranslateXProperty">
            <summary>
            The can translate x property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.UICompositeManipulator3D.CanTranslateYProperty">
            <summary>
            The can translate y property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.UICompositeManipulator3D.CanTranslateZProperty">
            <summary>
            The can translate z property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.UICompositeManipulator3D.DiameterProperty">
            <summary>
            The diameter property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.UICompositeManipulator3D.TargetTransformProperty">
            <summary>
              The target transform property.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.UICompositeManipulator3D.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.UICompositeManipulator3D.Bind(HelixToolkit.SharpDX.Wpf.GeometryModel3D)">
            <summary>
            Binds this manipulator to a given Model3D.
            </summary>
            <param name="target">
            Source Visual3D which receives the manipulator transforms. 
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.UICompositeManipulator3D.UnBind">
            <summary>
              Releases the binding of this manipulator.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.UICompositeManipulator3D.Render(HelixToolkit.SharpDX.Wpf.RenderContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.UICompositeManipulator3D.HitTest(SharpDX.Ray,System.Collections.Generic.List{HelixToolkit.SharpDX.Wpf.HitTestResult}@)">
            <summary>
            
            </summary>
            <param name="ray"></param>
            <param name="hits"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.UICompositeManipulator3D.OnChildrenChanged">
            <summary>
            The on children changed.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.UICompositeManipulator3D.ChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            The children changed.
            </summary>
            <param name="d">
            The d.
            </param>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.UICompositeManipulator3D.TargetTransform">
            <summary>
              Gets or sets TargetTransform.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.UICompositeManipulator3D.CanRotateX">
            <summary>
            Gets or sets a value indicating whether this instance can rotate X.
            </summary>
            <value> <c>true</c> if this instance can rotate X; otherwise, <c>false</c> . </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.UICompositeManipulator3D.CanRotateY">
            <summary>
            Gets or sets a value indicating whether this instance can rotate Y.
            </summary>
            <value> <c>true</c> if this instance can rotate Y; otherwise, <c>false</c> . </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.UICompositeManipulator3D.CanRotateZ">
            <summary>
            Gets or sets a value indicating whether this instance can rotate Z.
            </summary>
            <value> <c>true</c> if this instance can rotate Z; otherwise, <c>false</c> . </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.UICompositeManipulator3D.CanTranslateX">
            <summary>
            Gets or sets a value indicating whether this instance can translate X.
            </summary>
            <value> <c>true</c> if this instance can translate X; otherwise, <c>false</c> . </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.UICompositeManipulator3D.CanTranslateY">
            <summary>
            Gets or sets a value indicating whether this instance can translate Y.
            </summary>
            <value> <c>true</c> if this instance can translate Y; otherwise, <c>false</c> . </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.UICompositeManipulator3D.CanTranslateZ">
            <summary>
            Gets or sets a value indicating whether this instance can translate Z.
            </summary>
            <value> <c>true</c> if this instance can translate Z; otherwise, <c>false</c> . </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.UICompositeManipulator3D.Diameter">
            <summary>
            Gets or sets the diameter.
            </summary>
            <value> The diameter. </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.UIManipulator3D">
            <summary>
              An abstract base class for manipulators.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.UIManipulator3D.TargetTransformProperty">
            <summary>
              The target transform property. 
              Bind the Tranform of the Target to this Property
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.UIManipulator3D.OffsetProperty">
            <summary>
              The offset property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.UIManipulator3D.ValueProperty">
            <summary>
              The value property.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.UIManipulator3D.ValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when value has been changed.
            </summary>
            <param name="d">
            The sender. 
            </param>
            <param name="e">
            The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data. 
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.UIManipulator3D.OffsetChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.UIManipulator3D.Bind(HelixToolkit.SharpDX.Wpf.GeometryModel3D)">
            <summary>
            Binds this manipulator to a given Model3D.
            </summary>
            <param name="target">
            Source Visual3D which receives the manipulator transforms. 
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.UIManipulator3D.UnBind">
            <summary>
              Releases the binding of this manipulator.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.UIManipulator3D.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when value is changed.
            </summary>
            <param name="e">
            The e.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.UIManipulator3D.OnOffetChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.UIManipulator3D.OnMouse3DDown(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.UIManipulator3D.OnMouse3DUp(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.UIManipulator3D.OnMouse3DMove(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.UIManipulator3D.UpdateManipulator(System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.UIManipulator3D.ModelChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Geometry is changed.
            </summary>
            <param name="d">
            The sender. 
            </param>
            <param name="e">
            The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data. 
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.UIManipulator3D.OnModelChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.UIManipulator3D.ToWorldPos(SharpDX.Vector3)">
            <summary>
            
            </summary>
            <param name="vec"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.UIManipulator3D.ToWorldVec(SharpDX.Vector3)">
            <summary>
            
            </summary>
            <param name="vec"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.UIManipulator3D.ToModelPos(SharpDX.Vector3)">
            <summary>
            
            </summary>
            <param name="vec"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.UIManipulator3D.ToModelVec(SharpDX.Vector3)">
            <summary>
            
            </summary>
            <param name="vec"></param>
            <returns></returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.UIManipulator3D.TargetTransform">
            <summary>
              Gets or sets TargetTransform.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.UIManipulator3D.Offset">
            <summary>
              Gets or sets the offset of the visual (this vector is added to the Position point).
            </summary>
            <value> The offset. </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.UIManipulator3D.Value">
            <summary>
              Gets or sets the manipulator value.
            </summary>
            <value> The value. </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.UIRotateManipulator3D">
            <summary>
              A translate manipulator.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.UIRotateManipulator3D.AxisProperty">
            <summary>
            The axis property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.UIRotateManipulator3D.OuterDiameterProperty">
            <summary>
            The diameter property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.UIRotateManipulator3D.InnerDiameterProperty">
            <summary>
            The inner diameter property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.UIRotateManipulator3D.LengthProperty">
            <summary>
            The length property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.UIRotateManipulator3D.PivotProperty">
            <summary>
            The pivot point property.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.UIRotateManipulator3D.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Wpf.UIManipulator3D"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.UIRotateManipulator3D.OnModelChanged">
            <summary>
            Called when geometry has been changed.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.UIRotateManipulator3D.UpdateManipulator(System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>        
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.UIRotateManipulator3D.OnMouse3DMove(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.UIRotateManipulator3D.Axis">
            <summary>
            Gets or sets the rotation axis.
            </summary>
            <value>The axis.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.UIRotateManipulator3D.OuterDiameter">
            <summary>
            Gets or sets the diameter of the manipulator arrow.
            </summary>
            <value> The diameter. </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.UIRotateManipulator3D.InnerDiameter">
            <summary>
            Gets or sets the inner diameter.
            </summary>
            <value>The inner diameter.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.UIRotateManipulator3D.Length">
            <summary>
            Gets or sets the length of the cylinder.
            </summary>
            <value>The length.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.UIRotateManipulator3D.Pivot">
            <summary>
            Gets or sets the pivot point of the manipulator.
            </summary>
            <value> The position. </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.UITranslateManipulator3D">
            <summary>
              A translate manipulator.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.UITranslateManipulator3D.DiameterProperty">
            <summary>
            The diameter property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.UITranslateManipulator3D.DirectionProperty">
            <summary>
            The direction property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.UITranslateManipulator3D.LengthProperty">
            <summary>
            The length property.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.UITranslateManipulator3D.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Wpf.UIManipulator3D"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.UITranslateManipulator3D.OnModelChanged">
            <summary>
            Called when geometry has been changed.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.UITranslateManipulator3D.UpdateManipulator(System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>        
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.UITranslateManipulator3D.Diameter">
            <summary>
            Gets or sets the diameter of the manipulator arrow.
            </summary>
            <value> The diameter. </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.UITranslateManipulator3D.Direction">
            <summary>
            Gets or sets the direction of the translation.
            </summary>
            <value> The direction. </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.UITranslateManipulator3D.Length">
            <summary>
            Gets or sets the length of the manipulator arrow.
            </summary>
            <value> The length. </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.Light3D.DirectionTransformPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Light3D.Direction">
            <summary>
            Direction of the light.
            It applies to Directional Light and to Spot Light,
            for all other lights it is ignored.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Light3D.DirectionTransform">
            <summary>
            Transforms the Direction Vector of the Light.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Light3D.Color">
            <summary>
            Color of the light.
            For simplicity, this color applies to the diffuse and specular properties of the light.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Light3D.LightCount">
            <summary>
            Number of lights in the scene
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.Light3D.Model">
            <summary>
            The lighting model.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.Light3D.Type">
            <summary>
            Light Type.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.PointLightBase3D.Position">
            <summary>
            The position of the model in world space.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.PointLightBase3D.Attenuation">
            <summary>
            Attenuation coefficients:
            X = constant attenuation,
            Y = linar attenuation,
            Z = quadratic attenuation.
            For details see: http://msdn.microsoft.com/en-us/library/windows/desktop/bb172279(v=vs.85).aspx
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.PointLightBase3D.Range">
            <summary>
            Range of this light. This is the maximum distance 
            of a pixel being lit by this light.
            For details see: http://msdn.microsoft.com/en-us/library/windows/desktop/bb172279(v=vs.85).aspx
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.LineGeometryModel3D.Attach(HelixToolkit.SharpDX.IRenderHost)">
            <summary>
            
            </summary>
            <param name="host"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.LineGeometryModel3D.Detach">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.LineGeometryModel3D.Render(HelixToolkit.SharpDX.Wpf.RenderContext)">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.LineGeometryModel3D.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.SpotLight3D.Falloff">
            <summary>
            Decay Exponent of the spotlight.
            The falloff the spotlight between inner and outer angle
            depends on this value.
            For details see: http://msdn.microsoft.com/en-us/library/windows/desktop/bb174697(v=vs.85).aspx
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.SpotLight3D.OuterAngle">
            <summary>
            Full outer angle of the spot (Phi) in degrees
            For details see: http://msdn.microsoft.com/en-us/library/windows/desktop/bb174697(v=vs.85).aspx
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.SpotLight3D.InnerAngle">
            <summary>
            Full inner angle of the spot (Theta) in degrees. 
            For details see: http://msdn.microsoft.com/en-us/library/windows/desktop/bb174697(v=vs.85).aspx
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.UIElement3D">
            <summary>
            Base class for renderable GUI elements.
            </summary> 
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.PhongMaterial">
            <summary>
            Implments a phong-material with its all properties
            Includes Diffuse, Normal, Displacement, Specular, etc. maps
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.PhongMaterial.AmbientColorProperty">
            <summary>
            Identifies the System.Windows.Media.Media3D.DiffuseMaterial.AmbientColor dependency
            property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.PhongMaterial.DiffuseColorProperty">
            <summary>
            Identifies the System.Windows.Media.Media3D.DiffuseMaterial.Color dependency
            property.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.PhongMaterial.EmissiveColorProperty">
            <summary>
                    
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.PhongMaterial.SpecularColorProperty">
            <summary>
                    
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.PhongMaterial.SpecularShininessProperty">
            <summary>
                    
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.PhongMaterial.ReflectiveColorProperty">
            <summary>
                    
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.PhongMaterial.DiffuseMapProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.PhongMaterial.NormalMapProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.PhongMaterial.DisplacementMapProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.PhongMaterial.#ctor">
            <summary>
            Constructs a Shading Material which correspnds with 
            the Phong and BlinnPhong lighting models.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.PhongMaterial.AmbientColor">
            <summary>
            Gets or sets a color that represents how the material reflects System.Windows.Media.Media3D.AmbientLight.
            For details see: http://msdn.microsoft.com/en-us/library/windows/desktop/bb147175(v=vs.85).aspx
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.PhongMaterial.DiffuseColor">
            <summary>
            Gets or sets the diffuse color for the material.
            For details see: http://msdn.microsoft.com/en-us/library/windows/desktop/bb147175(v=vs.85).aspx
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.PhongMaterial.EmissiveColor">
            <summary>
            Gets or sets the emissive color for the material.
            For details see: http://msdn.microsoft.com/en-us/library/windows/desktop/bb147175(v=vs.85).aspx
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.PhongMaterial.ReflectiveColor">
            <summary>
            A fake parameter for reflectivity of the environment map
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.PhongMaterial.SpecularColor">
            <summary>
            Gets or sets the specular color for the material.
            For details see: http://msdn.microsoft.com/en-us/library/windows/desktop/bb147175(v=vs.85).aspx
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.PhongMaterial.SpecularShininess">
            <summary>
            The power of specular reflections. 
            For details see: http://msdn.microsoft.com/en-us/library/windows/desktop/bb147175(v=vs.85).aspx
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.PhongMaterial.DiffuseMap">
            <summary>
            System.Windows.Media.Brush to be applied as a System.Windows.Media.Media3D.Material
            to a 3-D model.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.PhongMaterial.NormalMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.PhongMaterial.DisplacementMap">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.PhongMaterials">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Properties.Resources._1278649116">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Properties.Resources._3911936450">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.Properties.Resources._886975107">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:HelixToolkit.SharpDX.Wpf.Properties.Resources.Common" -->
        <!-- Badly formed XML comment ignored for member "P:HelixToolkit.SharpDX.Wpf.Properties.Resources.Default" -->
        <!-- Badly formed XML comment ignored for member "P:HelixToolkit.SharpDX.Wpf.Properties.Resources.Deferred" -->
        <!-- Badly formed XML comment ignored for member "P:HelixToolkit.SharpDX.Wpf.Properties.Resources.DeferredLighting" -->
        <!-- Badly formed XML comment ignored for member "P:HelixToolkit.SharpDX.Wpf.Properties.Resources.Lines" -->
        <!-- Badly formed XML comment ignored for member "P:HelixToolkit.SharpDX.Wpf.Properties.Resources.Material" -->
        <!-- Badly formed XML comment ignored for member "P:HelixToolkit.SharpDX.Wpf.Properties.Resources.Tessellation" -->
        <member name="T:HelixToolkit.SharpDX.Wpf.IModelReader">
            <summary>
            Interface for model readers.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.IModelReader.Read(System.String,HelixToolkit.SharpDX.Wpf.ModelInfo)">
            <summary>
            Reads the model from the specified path.
            </summary>
            <param name="path">
            The path.
            </param>
            <returns>
            The model.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.IModelReader.Read(System.IO.Stream,HelixToolkit.SharpDX.Wpf.ModelInfo)">
            <summary>
            Reads the model from the specified stream.
            </summary>
            <param name="s">
            The stream.
            </param>
            <returns>
            The model.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.LineBuilder.GenerateGrid(System.Int32)">
            <summary>
            Generates a square grid with a step of 1.0 
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.LineBuilder.GenerateGrid(SharpDX.Vector3,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Generates a square grid with a step of 1.0 
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.LineBuilder.GenerateGrid(SharpDX.Vector3,System.Int32,System.Int32)">
            <summary>
            Generates a square grid with a step of 1.0 
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.LineBuilder.GenerateBoundingBox(HelixToolkit.SharpDX.Wpf.Geometry3D)">
            <summary>
            Returns a line geometry of the axis-aligned bounding-box of the given mesh.
            </summary>
            <param name="mesh">Input mesh for the computation of the b-box</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.LineBuilder.GenerateBoundingBox(SharpDX.Vector3[])">
            <summary>
            Returns a line geometry of the axis-aligned bounding-box of the given mesh.
            </summary>
            <param name="mesh">Input mesh for the computation of the b-box</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.LineBuilder.GenerateBoundingBox(SharpDX.BoundingBox)">
            <summary>
            Returns a line geometry of the axis-aligned bounding-box of the given mesh.
            </summary>
            <param name="mesh">Input mesh for the computation of the b-box</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.BoxFaces">
            <summary>
            Box face enumeration.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.BoxFaces.PositiveZ">
            <summary>
            The top.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.BoxFaces.NegativeZ">
            <summary>
            The bottom.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.BoxFaces.NegativeY">
            <summary>
            The left side.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.BoxFaces.PositiveY">
            <summary>
            The right side.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.BoxFaces.PositiveX">
            <summary>
            The front side.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.BoxFaces.NegativeX">
            <summary>
            The back side.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.BoxFaces.All">
            <summary>
            All sides.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.MeshBuilder">
            <summary>
            Builds MeshGeometry3D objects.
            </summary>
            <remarks>
            Performance tips for MeshGeometry3D (http://msdn.microsoft.com/en-us/library/bb613553.aspx)
            <para>
            High impact:
            Mesh animation—changing the individual vertices of a mesh on a per-frame basis—is not always efficient in
            Windows Presentation Foundation (WPF).  To minimize the performance impact of change notifications when
            each vertex is modified, detach the mesh from the visual tree before performing per-vertex modification.
            Once the mesh has been modified, reattach it to the visual tree.  Also, try to minimize the size of meshes
            that will be animated in this way.
            </para>
            <para>
            Medium impact:
            When a mesh is defined as abutting triangles with shared vertices and those vertices have the same position,
            normal, and texture coordinates, define each shared vertex only once and then define your triangles by
            index with TriangleIndices.
            </para>
            <para>
            Low impact:
            To minimize the construction time of large collections in Windows Presentation Foundation (WPF),
            such as a MeshGeometry3D’s Positions, Normals, TextureCoordinates, and TriangleIndices, pre-size
            the collections before value population. If possible, pass the collections’ constructors prepopulated
            data structures such as arrays or Lists.
            </para>
            </remarks>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.MeshBuilder.AllCurvesShouldHaveTheSameNumberOfPoints">
            <summary>
            'All curves should have the same number of points' exception message.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.MeshBuilder.SourceMeshNormalsShouldNotBeNull">
            <summary>
            'Source mesh normals should not be null' exception message.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.MeshBuilder.SourceMeshTextureCoordinatesShouldNotBeNull">
            <summary>
            'Source mesh texture coordinates should not be null' exception message.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.MeshBuilder.WrongNumberOfDiameters">
            <summary>
            'Wrong number of diameters' exception message.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.MeshBuilder.WrongNumberOfPositions">
            <summary>
            'Wrong number of positions' exception message.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.MeshBuilder.WrongNumberOfNormals">
            <summary>
            'Wrong number of normals' exception message.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.MeshBuilder.WrongNumberOfTextureCoordinates">
            <summary>
            'Wrong number of texture coordinates' exception message.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.MeshBuilder.CircleCache">
            <summary>
            The circle cache.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.MeshBuilder.UnitSphereCache">
            <summary>
            The unit sphere cache.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Wpf.MeshBuilder"/> class.
            </summary>
            <remarks>
            Normal and texture coordinate generation are included.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.ComputeTangents(System.Collections.Generic.List{SharpDX.Vector3},System.Collections.Generic.List{SharpDX.Vector3},System.Collections.Generic.List{SharpDX.Vector2},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{SharpDX.Vector3}@,System.Collections.Generic.List{SharpDX.Vector3}@)">
            <summary>
            Tangent Space computation for IndexedTriangle meshes
            Based on:
            http://www.terathon.com/code/tangent.html
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.ToMeshGeometry3D">
            <summary>
            Converts the geometry to a <see cref="T:HelixToolkit.SharpDX.Wpf.MeshGeometry3D"/> .        
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.GetCircle(System.Int32)">
            <summary>
            Gets a circle section (cached).
            </summary>
            <param name="thetaDiv">
            The number of division.
            </param>
            <returns>
            A circle.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddArrow(SharpDX.Vector3,SharpDX.Vector3,System.Double,System.Double,System.Int32)">
            <summary>
            Adds an arrow to the mesh.
            </summary>
            <param name="point1">
            The start point.
            </param>
            <param name="point2">
            The end point.
            </param>
            <param name="diameter">
            The diameter of the arrow cylinder.
            </param>
            <param name="headLength">
            Length of the head (relative to diameter).
            </param>
            <param name="thetaDiv">
            The number of divisions around the arrow.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddBoundingBox(System.Windows.Media.Media3D.Rect3D,System.Double)">
            <summary>
            Adds the edges of a bounding box as cylinders.
            </summary>
            <param name="boundingBox">
            The bounding box.
            </param>
            <param name="diameter">
            The diameter of the cylinders.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddBox(SharpDX.Vector3,System.Double,System.Double,System.Double,HelixToolkit.SharpDX.Wpf.BoxFaces)">
            <summary>
            Adds a box with the specifed faces, aligned with the X, Y and Z axes.
            </summary>
            <param name="center">
            The center point of the box.
            </param>
            <param name="xlength">
            The length of the box along the X axis.
            </param>
            <param name="ylength">
            The length of the box along the Y axis.
            </param>
            <param name="zlength">
            The length of the box along the Z axis.
            </param>
            <param name="faces">
            The faces to include.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddBox(SharpDX.Vector3,System.Double,System.Double,System.Double)">
            <summary>
            Adds a box aligned with the X, Y and Z axes.
            </summary>
            <param name="center">
            The center point of the box.
            </param>
            <param name="xlength">
            The length of the box along the X axis.
            </param>
            <param name="ylength">
            The length of the box along the Y axis.
            </param>
            <param name="zlength">
            The length of the box along the Z axis.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddBox(System.Windows.Media.Media3D.Rect3D)">
            <summary>
            Adds a box aligned with the X, Y and Z axes.
            </summary>
            <param name="rectangle">
            The 3-D "rectangle".
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddCubeFace(SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3,System.Double,System.Double,System.Double)">
            <summary>
            Adds a cube face.
            </summary>
            <param name="center">
            The center of the cube.
            </param>
            <param name="normal">
            The normal vector for the face.
            </param>
            <param name="up">
            The up vector for the face.
            </param>
            <param name="dist">
            The dist from the center of the cube to the face.
            </param>
            <param name="width">
            The width of the face.
            </param>
            <param name="height">
            The height of the face.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddCone(SharpDX.Vector3,SharpDX.Vector3,System.Double,System.Double,System.Double,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Adds a (possibly truncated) cone.
            </summary>
            <param name="origin">
            The origin.
            </param>
            <param name="direction">
            The direction (normalization not required).
            </param>
            <param name="baseRadius">
            The base radius.
            </param>
            <param name="topRadius">
            The top radius.
            </param>
            <param name="height">
            The height.
            </param>
            <param name="baseCap">
            Include a base cap if set to <c>true</c> .
            </param>
            <param name="topCap">
            Include the top cap if set to <c>true</c> .
            </param>
            <param name="thetaDiv">
            The number of divisions around the cone.
            </param>
            <remarks>
            See http://en.wikipedia.org/wiki/Cone_(geometry).
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddCone(SharpDX.Vector3,SharpDX.Vector3,System.Double,System.Boolean,System.Int32)">
            <summary>
            Adds a cone.
            </summary>
            <param name="origin">The origin point.</param>
            <param name="apex">The apex point.</param>
            <param name="baseRadius">The base radius.</param>
            <param name="baseCap">
            Include a base cap if set to <c>true</c> .
            </param>
            <param name="thetaDiv">The theta div.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddCylinder(SharpDX.Vector3,SharpDX.Vector3,System.Double,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Adds a cylinder to the mesh.
            </summary>
            <param name="p1">
            The first point.
            </param>
            <param name="p2">
            The second point.
            </param>
            <param name="diameter">
            The diameters.
            </param>
            <param name="thetaDiv">
            The number of divisions around the cylinder.
            </param>
            <remarks>
            See http://en.wikipedia.org/wiki/Cylinder_(geometry).
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddPipes(System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{System.Int32},System.Double,System.Int32)">
            <summary>
            Adds a collection of edges as cylinders.
            </summary>
            <param name="points">
            The points.
            </param>
            <param name="edges">
            The edge indices.
            </param>
            <param name="diameter">
            The diameter of the cylinders.
            </param>
            <param name="thetaDiv">
            The number of divisions around the cylinders.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddExtrudedGeometry(System.Collections.Generic.IList{SharpDX.Vector2},SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Adds an extruded surface of the specified curve.
            </summary>
            <param name="points">
            The 2D points describing the curve to extrude.
            </param>
            <param name="xaxis">
            The x-axis.
            </param>
            <param name="p0">
            The start origin of the extruded surface.
            </param>
            <param name="p1">
            The end origin of the extruded surface.
            </param>
            <remarks>
            The y-axis is determined by the cross product between the specified x-axis and the p1-p0 vector.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddLoftedGeometry(System.Collections.Generic.IList{System.Collections.Generic.IList{SharpDX.Vector3}},System.Collections.Generic.IList{System.Collections.Generic.IList{SharpDX.Vector3}},System.Collections.Generic.IList{System.Collections.Generic.IList{SharpDX.Vector2}})">
            <summary>
            Adds a lofted surface.
            </summary>
            <param name="positionsList">
            List of lofting sections.
            </param>
            <param name="normalList">
            The normal list.
            </param>
            <param name="textureCoordinateList">
            The texture coordinate list.
            </param>
            <remarks>
            See http://en.wikipedia.org/wiki/Loft_(3D).
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddNode(SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector2)">
            <summary>
            Adds a single node.
            </summary>
            <param name="position">
            The position.
            </param>
            <param name="normal">
            The normal.
            </param>
            <param name="textureCoordinate">
            The texture coordinate.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddPipe(SharpDX.Vector3,SharpDX.Vector3,System.Double,System.Double,System.Int32)">
            <summary>
            Adds a (possibly hollow) pipe.
            </summary>
            <param name="point1">
            The start point.
            </param>
            <param name="point2">
            The end point.
            </param>
            <param name="innerDiameter">
            The inner diameter.
            </param>
            <param name="diameter">
            The outer diameter.
            </param>
            <param name="thetaDiv">
            The number of divisions around the pipe.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddPolygon(System.Collections.Generic.IList{SharpDX.Vector3})">
            <summary>
            Adds a polygon.
            </summary>
            <param name="points">
            The points of the polygon.
            </param>
            <remarks>
            If the number of points is greater than 4, a triangle fan is used.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddPyramid(SharpDX.Vector3,System.Double,System.Double)">
            <summary>
            Adds a pyramid.
            </summary>
            <param name="center">
            The center.
            </param>
            <param name="sideLength">
            Length of the sides of the pyramid.
            </param>
            <param name="height">
            The height of the pyramid.
            </param>
            <remarks>
            See http://en.wikipedia.org/wiki/Pyramid_(geometry).
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddQuad(SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Adds a quadrilateral polygon.
            </summary>
            <param name="p0">
            The first point.
            </param>
            <param name="p1">
            The second point.
            </param>
            <param name="p2">
            The third point.
            </param>
            <param name="p3">
            The fourth point.
            </param>
            <remarks>
            See http://en.wikipedia.org/wiki/Quadrilateral.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddQuad(SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector2,SharpDX.Vector2,SharpDX.Vector2,SharpDX.Vector2)">
            <summary>
            Adds a quadrilateral polygon.
            </summary>
            <param name="p0">
            The first point.
            </param>
            <param name="p1">
            The second point.
            </param>
            <param name="p2">
            The third point.
            </param>
            <param name="p3">
            The fourth point.
            </param>
            <param name="uv0">
            The first texture coordinate.
            </param>
            <param name="uv1">
            The second texture coordinate.
            </param>
            <param name="uv2">
            The third texture coordinate.
            </param>
            <param name="uv3">
            The fourth texture coordinate.
            </param>
            <remarks>
            See http://en.wikipedia.org/wiki/Quadrilateral.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddQuads(System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{SharpDX.Vector2})">
            <summary>
            Adds a list of quadrilateral polygons.
            </summary>
            <param name="quadPositions">
            The points.
            </param>
            <param name="quadNormals">
            The normals.
            </param>
            <param name="quadTextureCoordinates">
            The texture coordinates.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddRectangularMesh(System.Collections.Generic.IList{SharpDX.Vector3},System.Int32,System.Boolean)">
            <summary>
            Adds a rectangular mesh (m x n points).
            </summary>
            <param name="points">
            The one-dimensional array of points. The points are stored row-by-row.
            </param>
            <param name="columns">
            The number of columns in the rectangular mesh.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddRectangularMesh(SharpDX.Vector3[0:,0:],SharpDX.Vector2[0:,0:],System.Boolean,System.Boolean)">
            <summary>
            Adds a rectangular mesh defined by a two-dimensional arrary of points.
            </summary>
            <param name="points">
            The points.
            </param>
            <param name="texCoords">
            The texture coordinates (optional).
            </param>
            <param name="closed0">
            set to <c>true</c> if the mesh is closed in the 1st dimension.
            </param>
            <param name="closed1">
            set to <c>true</c> if the mesh is closed in the 2nd dimension.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddRectangularMesh(HelixToolkit.SharpDX.Wpf.BoxFaces,System.Int32,System.Int32,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Generates a rectangles mesh on the axis-aligned plane given by the box-face.
            </summary>
            <param name="plane">Box face which determines the plane the grid lies on.</param>
            <param name="columns">width of the grid, i.e. horizontal resolution </param>
            <param name="rows">height of the grid, i.e. vertical resolution</param>
            <param name="width">total size in horizontal </param>
            <param name="height">total vertical size</param>
            <param name="flipTriangles">flips the triangle faces</param>
            <param name="flipTexCoordsUAxis">flips the u-axis (horizontal) of the texture coords.</param>
            <param name="flipTexCoordsVAxis">flips the v-axis (vertical) of the tex.coords.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddRegularIcosahedron(SharpDX.Vector3,System.Double,System.Boolean)">
            <summary>
            Adds a regular icosahedron.
            </summary>
            <param name="center">
            The center.
            </param>
            <param name="radius">
            The radius.
            </param>
            <param name="shareVertices">
            share vertices if set to <c>true</c> .
            </param>
            <remarks>
            See http://en.wikipedia.org/wiki/Icosahedron and http://www.gamedev.net/community/forums/topic.asp?topic_id=283350.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddRevolvedGeometry(System.Collections.Generic.IList{SharpDX.Vector2},SharpDX.Vector3,SharpDX.Vector3,System.Int32)">
            <summary>
            Adds a surface of revolution.
            </summary>
            <param name="points">
            The points (y coordinates are radius, x coordinates are distance from the origin along the axis of revolution)
            </param>
            <param name="origin">
            The origin of the revolution axis.
            </param>
            <param name="direction">
            The direction of the revolution axis.
            </param>
            <param name="thetaDiv">
            The number of divisions around the mesh.
            </param>
            <remarks>
            See http://en.wikipedia.org/wiki/Surface_of_revolution.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddSubdivisionSphere(SharpDX.Vector3,System.Double,System.Int32)">
            <summary>
            Adds a sphere (by subdiving a regular icosahedron).
            </summary>
            <param name="center">
            The center of the sphere.
            </param>
            <param name="radius">
            The radius of the sphere.
            </param>
            <param name="subdivisions">
            The number of triangular subdivisions of the original icosahedron.
            </param>
            <remarks>
            See http://www.fho-emden.de/~hoffmann/ikos27042002.pdf.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddSphere(SharpDX.Vector3,System.Double,System.Int32,System.Int32)">
            <summary>
            Adds a sphere.
            </summary>
            <param name="center">
            The center of the sphere.
            </param>
            <param name="radius">
            The radius of the sphere.
            </param>
            <param name="thetaDiv">
            The number of divisions around the sphere.
            </param>
            <param name="phiDiv">
            The number of divisions from top to bottom of the sphere.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddTriangle(SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Adds a triangle.
            </summary>
            <param name="p0">
            The first point.
            </param>
            <param name="p1">
            The second point.
            </param>
            <param name="p2">
            The third point.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddTriangle(SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector2,SharpDX.Vector2,SharpDX.Vector2)">
            <summary>
            Adds a triangle.
            </summary>
            <param name="p0">
            The first point.
            </param>
            <param name="p1">
            The second point.
            </param>
            <param name="p2">
            The third point.
            </param>
            <param name="uv0">
            The first texture coordinate.
            </param>
            <param name="uv1">
            The second texture coordinate.
            </param>
            <param name="uv2">
            The third texture coordinate.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddTriangleFan(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Adds a triangle fan.
            </summary>
            <param name="vertices">
            The vertex indices of the triangle fan.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddTriangleFan(System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{SharpDX.Vector2})">
            <summary>
            Adds a triangle fan to the mesh
            </summary>
            <param name="fanPositions">
            The points of the triangle fan.
            </param>
            <param name="fanNormals">
            The normals of the triangle fan.
            </param>
            <param name="fanTextureCoordinates">
            The texture coordinates of the triangle fan.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddTriangleStrip(System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{SharpDX.Vector2})">
            <summary>
            Adds a triangle strip to the mesh.
            </summary>
            <param name="stripPositions">
            The points of the triangle strip.
            </param>
            <param name="stripNormals">
            The normals of the triangle strip.
            </param>
            <param name="stripTextureCoordinates">
            The texture coordinates of the triangle strip.
            </param>
            <remarks>
            See http://en.wikipedia.org/wiki/Triangle_strip.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddTriangle(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Adds a triangle (exactely 3 indices)
            </summary>
            <param name="vertexIndices">The vertex indices.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddQuad(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Adds a quad (exactely 4 indices)
            </summary>
            <param name="vertexIndices">The vertex indices.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddPolygonByCuttingEars(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Adds a polygon defined by vertex indices (uses the cutting ears algorithm).
            </summary>
            <param name="vertexIndices">The vertex indices.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddTriangles(System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{SharpDX.Vector2})">
            <summary>
            Adds a list of triangles.
            </summary>
            <param name="trianglePositions">
            The points (the number of points must be a multiple of 3).
            </param>
            <param name="triangleNormals">
            The normals (corresponding to the points).
            </param>
            <param name="triangleTextureCoordinates">
            The texture coordinates (corresponding to the points).
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddTube(System.Collections.Generic.IList{SharpDX.Vector3},System.Double[],System.Double[],System.Int32,System.Boolean)">
            <summary>
            Adds a tube.
            </summary>
            <param name="path">
            A list of points defining the centers of the tube.
            </param>
            <param name="values">
            The texture coordinate X-values (optional).
            </param>
            <param name="diameters">
            The diameters (optional).
            </param>
            <param name="thetaDiv">
            The number of divisions around the tube.
            </param>
            <param name="isTubeClosed">
            Set to true if the tube path is closed.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddTube(System.Collections.Generic.IList{SharpDX.Vector3},System.Double,System.Int32,System.Boolean)">
            <summary>
            Adds a tube.
            </summary>
            <param name="path">
            A list of points defining the centers of the tube.
            </param>
            <param name="diameter">
            The diameter of the tube.
            </param>
            <param name="thetaDiv">
            The number of divisions around the tube.
            </param>
            <param name="isTubeClosed">
            Set to true if the tube path is closed.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddTube(System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{SharpDX.Vector2},System.Boolean,System.Boolean)">
            <summary>
            Adds a tube with a custom section.
            </summary>
            <param name="path">
            A list of points defining the centers of the tube.
            </param>
            <param name="values">
            The texture coordinate X values (optional).
            </param>
            <param name="diameters">
            The diameters (optional).
            </param>
            <param name="section">
            The section to extrude along the tube path.
            </param>
            <param name="isTubeClosed">
            If the tube is closed set to <c>true</c> .
            </param>
            <param name="isSectionClosed">
            if set to <c>true</c> [is section closed].
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.Append(HelixToolkit.SharpDX.Wpf.MeshBuilder)">
            <summary>
            Appends the specified mesh.
            </summary>
            <param name="mesh">
            The mesh.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.Append(HelixToolkit.SharpDX.Wpf.MeshGeometry3D)">
            <summary>
            Appends the specified mesh.
            </summary>
            <param name="mesh">
            The mesh.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.Append(System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{System.Int32},System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{SharpDX.Vector2})">
            <summary>
            Appends the specified points and triangles.
            </summary>
            <param name="positionsToAppend">
            The points to append.
            </param>
            <param name="triangleIndicesToAppend">
            The triangle indices to append.
            </param>
            <param name="normalsToAppend">
            The normals to append.
            </param>
            <param name="textureCoordinatesToAppend">
            The texture coordinates to append.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.ChamferCorner(SharpDX.Vector3,System.Double,System.Double,System.Collections.Generic.IList{SharpDX.Vector3})">
            <summary>
            Chamfers the specified corner (experimental code).
            </summary>
            <param name="p">
            The corner point.
            </param>
            <param name="d">
            The chamfer distance.
            </param>
            <param name="eps">
            The corner search limit distance.
            </param>
            <param name="chamferPoints">
            If this parameter is provided, the collection will be filled with the generated chamfer points.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.CheckPerformanceLimits">
            <summary>
            Checks the performance limits.
            </summary>
            <remarks>
            See http://msdn.microsoft.com/en-us/library/bb613553.aspx.
            Try to keep mesh sizes under these limits:
            Positions : 20,001 Point3D instances
            TriangleIndices : 60,003 Int32 instances
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.Scale(System.Single,System.Single,System.Single)">
            <summary>
            Scales the positions (and normals).
            </summary>
            <param name="scaleX">
            The X scale factor.
            </param>
            <param name="scaleY">
            The Y scale factor.
            </param>
            <param name="scaleZ">
            The Z scale factor.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.SubdivideLinear(System.Boolean)">
            <summary>
            Performs a linear subdivision of the mesh.
            </summary>
            <param name="barycentric">
            Barycentric(?) if set to <c>true</c> .
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.GetUnitSphere(System.Int32)">
            <summary>
            Gets a unit sphere from the cache.
            </summary>
            <param name="subdivisions">
            The number of subdivisions.
            </param>
            <returns>
            A unit sphere mesh.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddRectangularMeshNormals(System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds normals for a rectangular mesh.
            </summary>
            <param name="index0">
            The index 0.
            </param>
            <param name="rows">
            The number of rows.
            </param>
            <param name="columns">
            The number of columns.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddRectangularMeshTextureCoordinates(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Adds texture coordinates for a rectangular mesh.
            </summary>
            <param name="rows">
            The number of rows.
            </param>
            <param name="columns">
            The number of columns.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddRectangularMeshTriangleIndices(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Add triangle indices for a rectangular mesh.
            </summary>
            <param name="index0">
            The index offset.
            </param>
            <param name="rows">
            The number of rows.
            </param>
            <param name="columns">
            The number of columns.
            </param>
            <param name="isSpherical">
            set the flag to true to create a sphere mesh (triangles at top and bottom).
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddRectangularMeshTriangleIndicesFlipped(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Add triangle indices for a rectangular mesh with flipped triangles.
            </summary>
            <param name="index0">
            The index offset.
            </param>
            <param name="rows">
            The number of rows.
            </param>
            <param name="columns">
            The number of columns.
            </param>
            <param name="isSpherical">
            set the flag to true to create a sphere mesh (triangles at top and bottom).
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.AddRectangularMeshTriangleIndices(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Adds triangular indices for a rectangular mesh.
            </summary>
            <param name="index0">
            The index 0.
            </param>
            <param name="rows">
            The rows.
            </param>
            <param name="columns">
            The columns.
            </param>
            <param name="rowsClosed">
            True if rows are closed.
            </param>
            <param name="columnsClosed">
            True if columns are closed.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.FindCornerNormal(SharpDX.Vector3,System.Double)">
            <summary>
            Finds the average normal to the specified corner (experimental code).
            </summary>
            <param name="p">
            The corner point.
            </param>
            <param name="eps">
            The corner search limit distance.
            </param>
            <returns>
            The normal.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.NoSharedVertices">
            <summary>
            Makes sure no triangles share the same vertex.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.Subdivide4">
            <summary>
            Subdivides each triangle into four subtriangles.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.MeshBuilder.SubdivideBarycentric">
            <summary>
            Subdivides each triangle into six triangles. Adds a vertex at the midpoint of each triangle.
            </summary>
            <remarks>
            See http://en.wikipedia.org/wiki/Barycentric_subdivision
            </remarks>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.ObjReader">
            <summary>
            A Wavefront .obj file reader.
            </summary>
            <remarks>
            See the file format specifications at
            http://en.wikipedia.org/wiki/Obj
            http://en.wikipedia.org/wiki/Material_Template_Library
            http://www.martinreddy.net/gfx/3d/OBJ.spec
            http://www.eg-models.de/formats/Format_Obj.html
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ObjReader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Wpf.ObjReader"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ObjReader.Read(System.String,HelixToolkit.SharpDX.Wpf.ModelInfo)">
            <summary>
            Reads the model from the specified path.
            </summary>
            <param name="path">
            The path.
            </param>
            <returns>
            The model.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ObjReader.Read(System.IO.Stream,HelixToolkit.SharpDX.Wpf.ModelInfo)">
            <summary>
            Reads the model from the specified stream.
            </summary>
            <param name="s">
            The stream.
            </param>
            <returns>
            The model.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ObjReader.ReadZ(System.String)">
            <summary>
            Reads a GZipStream compressed OBJ file.
            </summary>
            <param name="path">
            The path.
            </param>
            <returns>
            A Model3D object containing the model.
            </returns>
            <remarks>
            This is a file format used by Helix Toolkit only.
            Use the GZipHelper class to compress an .obj file.
            </remarks>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.ObjReader.smoothingGroupMaps">
            <summary>
            The smoothing group maps.
            </summary>
            <remarks>
            The outer dictionary maps from a smoothing group number to a Dictionary&lt;int,int&gt;.
            The inner dictionary maps from an obj file vertex index to a vertex index in the current group.
            </remarks>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.ObjReader.currentSmoothingGroup">
            <summary>
            The current smoothing group.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.ObjReader.currentLineNo">
            <summary>
            The line number of the line being parsed.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ObjReader.ColorParse(System.String)">
            <summary>
            Parses a color string.
            </summary>
            <param name="values">
            The input.
            </param>
            <returns>
            The parsed color.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ObjReader.DoubleParse(System.String)">
            <summary>
            Parse a string containing a double value.
            </summary>
            <param name="input">
            The input string.
            </param>
            <returns>
            The value.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ObjReader.Split(System.String)">
            <summary>
            Splits the specified string using whitespace(input) as separators.
            </summary>
            <param name="input">
            The input string.
            </param>
            <returns>
            List of input.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ObjReader.SplitLine(System.String,System.String@,System.String@)">
            <summary>
            Splits a line in keyword and arguments.
            </summary>
            <param name="line">
            The line.
            </param>
            <param name="keyword">
            The keyword.
            </param>
            <param name="arguments">
            The arguments.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ObjReader.AddGroup(System.String)">
            <summary>
            Adds a group with the specified name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ObjReader.EnsureNewMesh">
            <summary>
            Ensures that a new mesh is created.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ObjReader.SetSmoothingGroup(System.String)">
            <summary>
            Sets the smoothing group number.
            </summary>
            <param name="values">The group number.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ObjReader.AddFace(System.String)">
            <summary>
            Adds a face.
            </summary>
            <param name="values">
            The input values.
            </param>
            <remarks>
            Adds a polygonal face. The numbers are indexes into the arrays of vertex positions,
            texture coordinates, and normals respectively. A number may be omitted if,
            for example, texture coordinates are not being defined in the model.
            There is no maximum number of vertices that a single polygon may contain.
            The .obj file specification says that each face must be flat and convex.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ObjReader.AddNormal(System.String)">
            <summary>
            Adds a normal.
            </summary>
            <param name="values">
            The input values.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ObjReader.AddTexCoord(System.String)">
            <summary>
            Adds a texture coordinate.
            </summary>
            <param name="values">
            The input values.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ObjReader.AddVertex(System.String)">
            <summary>
            Adds a vertex.
            </summary>
            <param name="values">
            The input values.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ObjReader.BuildModel">
            <summary>
            Builds the model.
            </summary>
            <returns>
            A Model3D object.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ObjReader.GetMaterial(System.String)">
            <summary>
            Gets the material with the specified name.
            </summary>
            <param name="materialName">
            The material name.
            </param>
            <returns>
            The material.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ObjReader.LoadMaterialLib(System.String)">
            <summary>
            Loads a material library.
            </summary>
            <param name="mtlFile">
            The mtl file.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ObjReader.SetMaterial(System.String)">
            <summary>
            Sets the material for the current group.
            </summary>
            <param name="materialName">
            The material name.
            </param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.ObjReader.DefaultColor">
            <summary>
            Gets or sets the default color.
            </summary>
            <value>The default color.</value>
            <remarks>
            The default value is Colors.Gold.
            </remarks>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.ObjReader.IgnoreErrors">
            <summary>
            Gets or sets a value indicating whether to ignore errors.
            </summary>
            <value><c>true</c> if errors should be ignored; <c>false</c> if errors should throw an exception.</value>
            <remarks>
            The default value is on (true).
            </remarks>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.ObjReader.SkipTransparencyValues">
            <summary>
            Gets or sets a value indicating whether to skip transparency values ("Tr") in the material files.
            </summary>
            <value>
            <c>true</c> if transparency values should be skipped; otherwise, <c>false</c>.
            </value>
            <remarks>
            This option is added to allow disabling the "Tr" values in files where it has been defined incorrectly.
            The transparency values ("Tr") are interpreted as 0 = transparent, 1 = opaque.
            The dissolve values ("d") are interpreted as 0 = transparent, 1=opaque.
            </remarks>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.ObjReader.IsSmoothingDefault">
            <summary>
            Sets a value indicating whether smoothing is default.
            </summary>
            <remarks>
            The default value is smoothing=on (true).
            </remarks>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.ObjReader.Groups">
            <summary>
            Gets the groups of the file.
            </summary>
            <value>The groups.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.ObjReader.Materials">
            <summary>
            Gets the materials in the imported material files.
            </summary>
            <value>The materials.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.ObjReader.TexturePath">
            <summary>
            Gets or sets the path to the textures.
            </summary>
            <value>The texture path.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.ObjReader.ModelInfo">
            <summary>
            Additional info how to treat the model
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.ObjReader.CurrentGroup">
            <summary>
            Gets the current group.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.ObjReader.Normals">
            <summary>
            Gets or sets the normals.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.ObjReader.Points">
            <summary>
            Gets or sets the points.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.ObjReader.Reader">
            <summary>
            Gets or sets the stream reader.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.ObjReader.TextureCoordinates">
            <summary>
            Gets or sets the texture coordinates.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.ObjReader.Group">
            <summary>
            Represents a group in the obj file.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.ObjReader.Group.meshBuilders">
            <summary>
            List of mesh builders.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Wpf.ObjReader.Group.materials">
            <summary>
            List of materials.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ObjReader.Group.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Wpf.ObjReader.Group"/> class.
            </summary>
            <param name="name">
            The name of the group.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ObjReader.Group.AddMesh">
            <summary>
            Adds a mesh.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ObjReader.Group.CreateModels(HelixToolkit.SharpDX.Wpf.ModelInfo)">
            <summary>
            Creates the models of the group.
            </summary>
            <returns>The models.</returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.ObjReader.Group.Material">
            <summary>
            Sets the material.
            </summary>
            <value>The material.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.ObjReader.Group.MeshBuilder">
            <summary>
            Gets the mesh builder for the current mesh.
            </summary>
            <value>The mesh builder.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.ObjReader.Group.Name">
            <summary>
            Gets or sets the group name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Wpf.ObjReader.MaterialDefinition">
            <summary>
            A material definition.
            </summary>
            <remarks>
            The file format is documented in http://en.wikipedia.org/wiki/Material_Template_Library.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ObjReader.MaterialDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Wpf.ObjReader.MaterialDefinition"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ObjReader.MaterialDefinition.GetMaterial(System.String)">
            <summary>
            Gets the material from the specified path.
            </summary>
            <param name="texturePath">
            The texture path.
            </param>
            <returns>
            The material.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Wpf.ObjReader.MaterialDefinition.CreateMaterial(System.String)">
            <summary>
            Creates the material.
            </summary>
            <param name="texturePath">The texture path.</param>
            <returns>A WPF material.</returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.ObjReader.MaterialDefinition.AlphaMap">
            <summary>
            Gets or sets the alpha map.
            </summary>
            <value>The alpha map.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.ObjReader.MaterialDefinition.Ambient">
            <summary>
            Gets or sets the ambient color.
            </summary>
            <value>The ambient.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.ObjReader.MaterialDefinition.AmbientMap">
            <summary>
            Gets or sets the ambient map.
            </summary>
            <value>The ambient map.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.ObjReader.MaterialDefinition.BumpMap">
            <summary>
            Gets or sets the bump map.
            </summary>
            <value>The bump map.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.ObjReader.MaterialDefinition.Diffuse">
            <summary>
            Gets or sets the diffuse color.
            </summary>
            <value>The diffuse.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.ObjReader.MaterialDefinition.DiffuseMap">
            <summary>
            Gets or sets the diffuse map.
            </summary>
            <value>The diffuse map.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.ObjReader.MaterialDefinition.Dissolved">
            <summary>
            Gets or sets the opacity value.
            </summary>
            <value>The opacity.</value>
            <remarks>
            0.0 is transparent, 1.0 is opaque.
            </remarks>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.ObjReader.MaterialDefinition.Illumination">
            <summary>
            Gets or sets the illumination.
            </summary>
            <value>The illumination.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.ObjReader.MaterialDefinition.Specular">
            <summary>
            Gets or sets the specular color.
            </summary>
            <value>The specular color.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.ObjReader.MaterialDefinition.SpecularCoefficient">
            <summary>
            Gets or sets the specular coefficient.
            </summary>
            <value>The specular coefficient.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.ObjReader.MaterialDefinition.SpecularMap">
            <summary>
            Gets or sets the specular map.
            </summary>
            <value>The specular map.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Wpf.ObjReader.MaterialDefinition.Material">
            <summary>
            Gets or sets the material.
            </summary>
            <value>The material.</value>
        </member>
    </members>
</doc>
